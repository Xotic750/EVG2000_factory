#ifndef __MDM_OBJECT_H__
#define __MDM_OBJECT_H__


/*
 * This file is automatically generated from the data-model spreadsheet.
 * Do not modify this file directly - You will lose all your changes the
 * next time this file is generated!
 */


/*!\file mdm_object.h 
 * \brief Automatically generated header file mdm_object.h
 */


#include "cms.h"

/*! \brief Obj struct for InternetGatewayDevice.
 *
 * MDMOID_IGD 1
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only*/
    char *    deviceSummary;	/**< DeviceSummary */
    UINT32    LANDeviceNumberOfEntries;	/**< LANDeviceNumberOfEntries */
    UINT32    WANDeviceNumberOfEntries;	/**< WANDeviceNumberOfEntries */
} IGDObject;

/*! \brief _IGDObject is used internally to represent IGDObject */
typedef IGDObject _IGDObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.
 *
 * MDMOID_IGD_DEVICE_INFO 2
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturer;	/**< Manufacturer */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    modelName;	/**< ModelName */
    char *    description;	/**< Description */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
    char *    hardwareVersion;	/**< HardwareVersion */
    char *    softwareVersion;	/**< SoftwareVersion */
    char *    modemFirmwareVersion;	/**< ModemFirmwareVersion */
    char *    enabledOptions;	/**< EnabledOptions */
    char *    additionalHardwareVersion;	/**< AdditionalHardwareVersion */
    char *    additionalSoftwareVersion;	/**< AdditionalSoftwareVersion */
    char *    specVersion;	/**< SpecVersion */
    char *    provisioningCode;	/**< ProvisioningCode */
    UINT32    upTime;	/**< UpTime */
    char *    deviceLog;	/**< DeviceLog */
} IGDDeviceInfoObject;

/*! \brief _IGDDeviceInfoObject is used internally to represent IGDDeviceInfoObject */
typedef IGDDeviceInfoObject _IGDDeviceInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SyslogCfg.
 *
 * MDMOID_SYSLOG_CFG 3
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    option;	/**< Option */
    char *    localDisplayLevel;	/**< LocalDisplayLevel */
    char *    localLogLevel;	/**< LocalLogLevel */
    char *    remoteLogLevel;	/**< RemoteLogLevel */
    char *    serverIPAddress;	/**< ServerIPAddress */
    UINT32    serverPortNumber;	/**< ServerPortNumber */
} SyslogCfgObject;

/*! \brief _SyslogCfgObject is used internally to represent SyslogCfgObject */
typedef SyslogCfgObject _SyslogCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_LoginCfg.
 *
 * MDMOID_LOGIN_CFG 4
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    adminUserName;	/**< AdminUserName */
    char *    adminPassword;	/**< AdminPassword */
    char *    supportUserName;	/**< SupportUserName */
    char *    supportPassword;	/**< SupportPassword */
    char *    userUserName;	/**< UserUserName */
    char *    userPassword;	/**< UserPassword */
} LoginCfgObject;

/*! \brief _LoginCfgObject is used internally to represent LoginCfgObject */
typedef LoginCfgObject _LoginCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.
 *
 * MDMOID_APP_CFG 5
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} AppCfgObject;

/*! \brief _AppCfgObject is used internally to represent AppCfgObject */
typedef AppCfgObject _AppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.HttpdCfg.
 *
 * MDMOID_HTTPD_CFG 6
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} HttpdCfgObject;

/*! \brief _HttpdCfgObject is used internally to represent HttpdCfgObject */
typedef HttpdCfgObject _HttpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.Tr69cCfg.
 *
 * MDMOID_TR69C_CFG 7
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
#ifdef DMP_X_BROADCOM_COM_DEBUG_1
    UBOOL8    loggingSOAP;	/**< LoggingSOAP */
#endif
#ifdef DMP_X_BROADCOM_COM_SECURITY_1
    UBOOL8    connectionRequestAuthentication;	/**< ConnectionRequestAuthentication */
#endif
} Tr69cCfgObject;

/*! \brief _Tr69cCfgObject is used internally to represent Tr69cCfgObject */
typedef Tr69cCfgObject _Tr69cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.Tr64cCfg.
 *
 * MDMOID_TR64C_CFG 8
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} Tr64cCfgObject;

/*! \brief _Tr64cCfgObject is used internally to represent Tr64cCfgObject */
typedef Tr64cCfgObject _Tr64cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SshdCfg.
 *
 * MDMOID_SSHD_CFG 9
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SshdCfgObject;

/*! \brief _SshdCfgObject is used internally to represent SshdCfgObject */
typedef SshdCfgObject _SshdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.TelnetdCfg.
 *
 * MDMOID_TELNETD_CFG 10
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TelnetdCfgObject;

/*! \brief _TelnetdCfgObject is used internally to represent TelnetdCfgObject */
typedef TelnetdCfgObject _TelnetdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.ConsoledCfg.
 *
 * MDMOID_CONSOLED_CFG 11
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} ConsoledCfgObject;

/*! \brief _ConsoledCfgObject is used internally to represent ConsoledCfgObject */
typedef ConsoledCfgObject _ConsoledCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SmdCfg.
 *
 * MDMOID_SMD_CFG 12
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SmdCfgObject;

/*! \brief _SmdCfgObject is used internally to represent SmdCfgObject */
typedef SmdCfgObject _SmdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SskCfg.
 *
 * MDMOID_SSK_CFG 13
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SskCfgObject;

/*! \brief _SskCfgObject is used internally to represent SskCfgObject */
typedef SskCfgObject _SskCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SnmpdCfg.
 *
 * MDMOID_SNMPD_CFG 14
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SnmpdCfgObject;

/*! \brief _SnmpdCfgObject is used internally to represent SnmpdCfgObject */
typedef SnmpdCfgObject _SnmpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.FtpdCfg.
 *
 * MDMOID_FTPD_CFG 15
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} FtpdCfgObject;

/*! \brief _FtpdCfgObject is used internally to represent FtpdCfgObject */
typedef FtpdCfgObject _FtpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.TftpdCfg.
 *
 * MDMOID_TFTPD_CFG 16
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TftpdCfgObject;

/*! \brief _TftpdCfgObject is used internally to represent TftpdCfgObject */
typedef TftpdCfgObject _TftpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.PppdCfg.
 *
 * MDMOID_PPPD_CFG 17
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} PppdCfgObject;

/*! \brief _PppdCfgObject is used internally to represent PppdCfgObject */
typedef PppdCfgObject _PppdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.IcmpCfg.
 *
 * MDMOID_ICMP_CFG 18
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
} IcmpCfgObject;

/*! \brief _IcmpCfgObject is used internally to represent IcmpCfgObject */
typedef IcmpCfgObject _IcmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.UpnpCfg.
 *
 * MDMOID_UPNP_CFG 19
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} UpnpCfgObject;

/*! \brief _UpnpCfgObject is used internally to represent UpnpCfgObject */
typedef UpnpCfgObject _UpnpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.DnsProxyCfg.
 *
 * MDMOID_DNS_PROXY_CFG 20
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    deviceDomainName;	/**< DeviceDomainName */
    char *    deviceHostName;	/**< DeviceHostName */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} DnsProxyCfgObject;

/*! \brief _DnsProxyCfgObject is used internally to represent DnsProxyCfgObject */
typedef DnsProxyCfgObject _DnsProxyCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetSwitch.
 *
 * MDMOID_ETHERNET_SWITCH 21
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    numberOfVirtualPorts;	/**< NumberOfVirtualPorts */
    UBOOL8    enableVirtualPorts;	/**< EnableVirtualPorts */
    char *    ifName;	/**< IfName */
} EthernetSwitchObject;

/*! \brief _EthernetSwitchObject is used internally to represent EthernetSwitchObject */
typedef EthernetSwitchObject _EthernetSwitchObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_PwrMngtCfg.
 *
 * MDMOID_PWR_MNGT 22
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    CPUSpeed;	/**< CPUSpeed */
    UBOOL8    CPUr4kWaitEn;	/**< CPUr4kWaitEn */
    UBOOL8    DRAMAutoPDEn;	/**< DRAMAutoPDEn */
    UBOOL8    VCTEn;	/**< VCTEn */
    UBOOL8    wifiEn;	/**< WifiEn */
    UBOOL8    ledEn;	/**< LedEn */
    UBOOL8    USBHostEn;	/**< USBHostEn */
    UBOOL8    USBDevEn;	/**< USBDevEn */
    UBOOL8    DSLEn;	/**< DSLEn */
    UBOOL8    bcm6358MAC0En;	/**< bcm6358MAC0En */
    UBOOL8    bcm6358MAC1En;	/**< bcm6358MAC1En */
    UBOOL8    bcm6358EPHYEn;	/**< bcm6358EPHYEn */
    UBOOL8    bcm5325ePHY0En;	/**< bcm5325ePHY0En */
    UBOOL8    bcm5325ePHY1En;	/**< bcm5325ePHY1En */
    UBOOL8    bcm5325ePHY2En;	/**< bcm5325ePHY2En */
    UBOOL8    bcm5325ePHY3En;	/**< bcm5325ePHY3En */
    UBOOL8    bcm5325ePHY45En;	/**< bcm5325ePHY45En */
    UBOOL8    bcm6368ePHY0En;	/**< bcm6368ePHY0En */
    UBOOL8    bcm6368ePHY1En;	/**< bcm6368ePHY1En */
    UBOOL8    bcm6368ePHY2En;	/**< bcm6368ePHY2En */
    UBOOL8    bcm6368ePHY3En;	/**< bcm6368ePHY3En */
} PwrMngtObject;

/*! \brief _PwrMngtObject is used internally to represent PwrMngtObject */
typedef PwrMngtObject _PwrMngtObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.
 *
 * MDMOID_MANAGEMENT_SERVER 23
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    URL;	/**< URL */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UBOOL8    periodicInformEnable;	/**< PeriodicInformEnable */
    UINT32    periodicInformInterval;	/**< PeriodicInformInterval */
    DATETIME  periodicInformTime;	/**< PeriodicInformTime */
    char *    parameterKey;	/**< ParameterKey */
    char *    X_BROADCOM_COM_BoundIfName;	/**< X_BROADCOM_COM_BoundIfName */
    char *    connectionRequestURL;	/**< ConnectionRequestURL */
    char *    connectionRequestUsername;	/**< ConnectionRequestUsername */
    char *    connectionRequestPassword;	/**< ConnectionRequestPassword */
    UBOOL8    upgradesManaged;	/**< UpgradesManaged */
    char *    kickURL;	/**< KickURL */
#ifdef DMP_DEVICEASSOCIATION_1
    UINT32    manageableDeviceNumberOfEntries;	/**< ManageableDeviceNumberOfEntries */
#endif
    UINT32    manageableDeviceNotificationLimit;	/**< ManageableDeviceNotificationLimit */
} ManagementServerObject;

/*! \brief _ManagementServerObject is used internally to represent ManagementServerObject */
typedef ManagementServerObject _ManagementServerObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.ManageableDevice.{i}.
 *
 * MDMOID_MANAGEABLE_DEVICE 24
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    serialNumber;	/**< SerialNumber */
    char *    productClass;	/**< ProductClass */
} ManageableDeviceObject;

/*! \brief _ManageableDeviceObject is used internally to represent ManageableDeviceObject */
typedef ManageableDeviceObject _ManageableDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Time.
 *
 * MDMOID_TIME_SERVER_CFG 25
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    X_BROADCOM_COM_NTPEnable;	/**< X_BROADCOM_COM_NTPEnable */
    char *    NTPServer1;	/**< NTPServer1 */
    char *    NTPServer2;	/**< NTPServer2 */
    char *    NTPServer3;	/**< NTPServer3 */
    char *    NTPServer4;	/**< NTPServer4 */
    char *    NTPServer5;	/**< NTPServer5 */
    DATETIME  currentLocalTime;	/**< CurrentLocalTime */
    char *    localTimeZone;	/**< LocalTimeZone */
    char *    localTimeZoneName;	/**< LocalTimeZoneName */
    UBOOL8    daylightSavingsUsed;	/**< DaylightSavingsUsed */
    DATETIME  daylightSavingsStart;	/**< DaylightSavingsStart */
    DATETIME  daylightSavingsEnd;	/**< DaylightSavingsEnd */
} TimeServerCfgObject;

/*! \brief _TimeServerCfgObject is used internally to represent TimeServerCfgObject */
typedef TimeServerCfgObject _TimeServerCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.
 *
 * MDMOID_L2_BRIDGING 26
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxBridgeEntries;	/**< MaxBridgeEntries */
    UINT32    maxFilterEntries;	/**< MaxFilterEntries */
    UINT32    maxMarkingEntries;	/**< MaxMarkingEntries */
    UINT32    bridgeNumberOfEntries;	/**< BridgeNumberOfEntries */
    UINT32    filterNumberOfEntries;	/**< FilterNumberOfEntries */
    UINT32    markingNumberOfEntries;	/**< MarkingNumberOfEntries */
    UINT32    availableInterfaceNumberOfEntries;	/**< AvailableInterfaceNumberOfEntries */
} L2BridgingObject;

/*! \brief _L2BridgingObject is used internally to represent L2BridgingObject */
typedef L2BridgingObject _L2BridgingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Bridge.{i}.
 *
 * MDMOID_L2_BRIDGING_ENTRY 27
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bridgeKey;	/**< BridgeKey */
    UBOOL8    bridgeEnable;	/**< BridgeEnable */
    char *    bridgeStatus;	/**< BridgeStatus */
    char *    bridgeName;	/**< BridgeName */
    UINT32    VLANID;	/**< VLANID */
} L2BridgingEntryObject;

/*! \brief _L2BridgingEntryObject is used internally to represent L2BridgingEntryObject */
typedef L2BridgingEntryObject _L2BridgingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Filter.{i}.
 *
 * MDMOID_L2_BRIDGING_FILTER 28
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    filterKey;	/**< FilterKey */
    UBOOL8    filterEnable;	/**< FilterEnable */
    char *    filterStatus;	/**< FilterStatus */
    SINT32    filterBridgeReference;	/**< FilterBridgeReference */
    char *    filterInterface;	/**< FilterInterface */
    char *    sourceMACFromVendorClassIDFilter;	/**< SourceMACFromVendorClassIDFilter */
    UBOOL8    sourceMACFromVendorClassIDFilterExclude;	/**< SourceMACFromVendorClassIDFilterExclude */
} L2BridgingFilterObject;

/*! \brief _L2BridgingFilterObject is used internally to represent L2BridgingFilterObject */
typedef L2BridgingFilterObject _L2BridgingFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}.
 *
 * MDMOID_L2_BRIDGING_INTF 29
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    availableInterfaceKey;	/**< AvailableInterfaceKey */
    char *    interfaceType;	/**< InterfaceType */
    char *    interfaceReference;	/**< InterfaceReference */
} L2BridgingIntfObject;

/*! \brief _L2BridgingIntfObject is used internally to represent L2BridgingIntfObject */
typedef L2BridgingIntfObject _L2BridgingIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.
 *
 * MDMOID_Q_MGMT 30
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    maxQueues;	/**< MaxQueues */
    UINT32    maxClassificationEntries;	/**< MaxClassificationEntries */
    UINT32    classificationNumberOfEntries;	/**< ClassificationNumberOfEntries */
    UINT32    maxAppEntries;	/**< MaxAppEntries */
    UINT32    appNumberOfEntries;	/**< AppNumberOfEntries */
    UINT32    maxFlowEntries;	/**< MaxFlowEntries */
    UINT32    flowNumberOfEntries;	/**< FlowNumberOfEntries */
    UINT32    maxPolicerEntries;	/**< MaxPolicerEntries */
    UINT32    policerNumberOfEntries;	/**< PolicerNumberOfEntries */
    UINT32    maxQueueEntries;	/**< MaxQueueEntries */
    UINT32    queueNumberOfEntries;	/**< QueueNumberOfEntries */
    UINT32    defaultForwardingPolicy;	/**< DefaultForwardingPolicy */
    SINT32    defaultPolicer;	/**< DefaultPolicer */
    UINT32    defaultQueue;	/**< DefaultQueue */
    SINT32    defaultDSCPMark;	/**< DefaultDSCPMark */
    SINT32    defaultEthernetPriorityMark;	/**< DefaultEthernetPriorityMark */
    char *    availableAppList;	/**< AvailableAppList */
} QMgmtObject;

/*! \brief _QMgmtObject is used internally to represent QMgmtObject */
typedef QMgmtObject _QMgmtObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Classification.{i}.
 *
 * MDMOID_Q_MGMT_CLASSIFICATION 31
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    classificationKey;	/**< ClassificationKey */
    UBOOL8    classificationEnable;	/**< ClassificationEnable */
    char *    classificationStatus;	/**< ClassificationStatus */
    UINT32    classificationOrder;	/**< ClassificationOrder */
    char *    classInterface;	/**< ClassInterface */
    char *    destIP;	/**< DestIP */
    char *    destMask;	/**< DestMask */
    UBOOL8    destIPExclude;	/**< DestIPExclude */
    char *    sourceIP;	/**< SourceIP */
    char *    sourceMask;	/**< SourceMask */
    UBOOL8    sourceIPExclude;	/**< SourceIPExclude */
    SINT32    protocol;	/**< Protocol */
    UBOOL8    protocolExclude;	/**< ProtocolExclude */
    SINT32    destPort;	/**< DestPort */
    SINT32    destPortRangeMax;	/**< DestPortRangeMax */
    UBOOL8    destPortExclude;	/**< DestPortExclude */
    SINT32    sourcePort;	/**< SourcePort */
    SINT32    sourcePortRangeMax;	/**< SourcePortRangeMax */
    UBOOL8    sourcePortExclude;	/**< SourcePortExclude */
    char *    sourceMACAddress;	/**< SourceMACAddress */
    char *    sourceMACMask;	/**< SourceMACMask */
    UBOOL8    sourceMACExclude;	/**< SourceMACExclude */
    char *    destMACAddress;	/**< DestMACAddress */
    char *    destMACMask;	/**< DestMACMask */
    UBOOL8    destMACExclude;	/**< DestMACExclude */
    SINT32    ethertype;	/**< Ethertype */
    UBOOL8    ethertypeExclude;	/**< EthertypeExclude */
    char *    sourceVendorClassID;	/**< SourceVendorClassID */
    UBOOL8    sourceVendorClassIDExclude;	/**< SourceVendorClassIDExclude */
    char *    sourceUserClassID;	/**< SourceUserClassID */
    UBOOL8    sourceUserClassIDExclude;	/**< SourceUserClassIDExclude */
    SINT32    DSCPCheck;	/**< DSCPCheck */
    UBOOL8    DSCPExclude;	/**< DSCPExclude */
    SINT32    DSCPMark;	/**< DSCPMark */
    SINT32    ethernetPriorityCheck;	/**< EthernetPriorityCheck */
    UBOOL8    ethernetPriorityExclude;	/**< EthernetPriorityExclude */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
    SINT32    VLANIDCheck;	/**< VLANIDCheck */
    UBOOL8    VLANIDExclude;	/**< VLANIDExclude */
    UINT32    forwardingPolicy;	/**< ForwardingPolicy */
    SINT32    classPolicer;	/**< ClassPolicer */
    SINT32    classQueue;	/**< ClassQueue */
    SINT32    classApp;	/**< ClassApp */
    SINT32    X_BROADCOM_COM_ClassRate;	/**< X_BROADCOM_COM_ClassRate */
    char *    X_BROADCOM_COM_ClassName;	/**< X_BROADCOM_COM_ClassName */
    SINT32    X_BROADCOM_COM_VLANIDTag;	/**< X_BROADCOM_COM_VLANIDTag */
} QMgmtClassificationObject;

/*! \brief _QMgmtClassificationObject is used internally to represent QMgmtClassificationObject */
typedef QMgmtClassificationObject _QMgmtClassificationObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Queue.{i}.
 *
 * MDMOID_Q_MGMT_QUEUE 32
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    queueKey;	/**< QueueKey */
    UBOOL8    queueEnable;	/**< QueueEnable */
    char *    queueStatus;	/**< QueueStatus */
    char *    queueInterface;	/**< QueueInterface */
    UINT32    queuePrecedence;	/**< QueuePrecedence */
    char *    X_BROADCOM_COM_QueueName;	/**< X_BROADCOM_COM_QueueName */
    SINT32    X_BROADCOM_COM_DslLatency;	/**< X_BROADCOM_COM_DslLatency */
    SINT32    X_BROADCOM_COM_PtmPriority;	/**< X_BROADCOM_COM_PtmPriority */
} QMgmtQueueObject;

/*! \brief _QMgmtQueueObject is used internally to represent QMgmtQueueObject */
typedef QMgmtQueueObject _QMgmtQueueObject;



/*! \brief Obj struct for InternetGatewayDevice.IPPingDiagnostics.
 *
 * MDMOID_IP_PING_DIAG 33
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} IPPingDiagObject;

/*! \brief _IPPingDiagObject is used internally to represent IPPingDiagObject */
typedef IPPingDiagObject _IPPingDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.
 *
 * MDMOID_LAN_DEV 34
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    LANEthernetInterfaceNumberOfEntries;	/**< LANEthernetInterfaceNumberOfEntries */
    UINT32    LANUSBInterfaceNumberOfEntries;	/**< LANUSBInterfaceNumberOfEntries */
    UINT32    LANWLANConfigurationNumberOfEntries;	/**< LANWLANConfigurationNumberOfEntries */
} LanDevObject;

/*! \brief _LanDevObject is used internally to represent LanDevObject */
typedef LanDevObject _LanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IgmpSnoopingConfig.
 *
 * MDMOID_IGMP_SNOOPING_CFG 35
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mode;	/**< Mode */
} IgmpSnoopingCfgObject;

/*! \brief _IgmpSnoopingCfgObject is used internally to represent IgmpSnoopingCfgObject */
typedef IgmpSnoopingCfgObject _IgmpSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.
 *
 * MDMOID_LAN_HOST_CFG 36
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPServerConfigurable;	/**< DHCPServerConfigurable */
    UBOOL8    DHCPServerEnable;	/**< DHCPServerEnable */
    UBOOL8    DHCPRelay;	/**< DHCPRelay */
    char *    X_BROADCOM_COM_DhcpRelayServer;	/**< X_BROADCOM_COM_DhcpRelayServer */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
    UINT32    IPInterfaceNumberOfEntries;	/**< IPInterfaceNumberOfEntries */
} LanHostCfgObject;

/*! \brief _LanHostCfgObject is used internally to represent LanHostCfgObject */
typedef LanHostCfgObject _LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.
 *
 * MDMOID_LAN_IP_INTF 37
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    IPInterfaceIPAddress;	/**< IPInterfaceIPAddress */
    char *    IPInterfaceSubnetMask;	/**< IPInterfaceSubnetMask */
    char *    IPInterfaceAddressingType;	/**< IPInterfaceAddressingType */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
#ifdef DMP_X_BROADCOM_COM_SECURITY_1
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6InterfaceAddress;	/**< X_BROADCOM_COM_IPv6InterfaceAddress */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_IPv6InterfaceAddressPrefixLength;	/**< X_BROADCOM_COM_IPv6InterfaceAddressPrefixLength */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6InterfaceAddressingType;	/**< X_BROADCOM_COM_IPv6InterfaceAddressingType */
#endif
} LanIpIntfObject;

/*! \brief _LanIpIntfObject is used internally to represent LanIpIntfObject */
typedef LanIpIntfObject _LanIpIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_LAN_IP_INTF_FIREWALL_EXCEPTION 38
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} LanIpIntfFirewallExceptionObject;

/*! \brief _LanIpIntfFirewallExceptionObject is used internally to represent LanIpIntfFirewallExceptionObject */
typedef LanIpIntfFirewallExceptionObject _LanIpIntfFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_IpFilterCfg.{i}.
 *
 * MDMOID_IP_FILTER_CFG 39
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} IpFilterCfgObject;

/*! \brief _IpFilterCfgObject is used internally to represent IpFilterCfgObject */
typedef IpFilterCfgObject _IpFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.
 *
 * MDMOID_DHCP_CONDITIONAL_SERVING 40
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    chaddr;	/**< Chaddr */
    char *    chaddrMask;	/**< ChaddrMask */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
} DHCPConditionalServingObject;

/*! \brief _DHCPConditionalServingObject is used internally to represent DHCPConditionalServingObject */
typedef DHCPConditionalServingObject _DHCPConditionalServingObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.
 *
 * MDMOID_I_PV6_LAN_HOST_CFG 41
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPv6ServerEnable;	/**< DHCPv6ServerEnable */
    char *    IPv6DomainName;	/**< IPv6DomainName */
    char *    IPv6DNSConfigType;	/**< IPv6DNSConfigType */
    char *    IPv6DNSServers;	/**< IPv6DNSServers */
    char *    IPv6DNSWANConnection;	/**< IPv6DNSWANConnection */
    UBOOL8    RADVDEnable;	/**< RADVDEnable */
    char *    IPv6SitePrefixConfigType;	/**< IPv6SitePrefixConfigType */
    char *    IPv6SitePrefix;	/**< IPv6SitePrefix */
    char *    IPv6PrefixDelegationWANConnection;	/**< IPv6PrefixDelegationWANConnection */
    UINT32    IPv6InterfaceNumberOfEntries;	/**< IPv6InterfaceNumberOfEntries */
} IPv6LanHostCfgObject;

/*! \brief _IPv6LanHostCfgObject is used internally to represent IPv6LanHostCfgObject */
typedef IPv6LanHostCfgObject _IPv6LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.X_BROADCOM_COM_MldSnoopingConfig.
 *
 * MDMOID_MLD_SNOOPING_CFG 42
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mode;	/**< Mode */
} MldSnoopingCfgObject;

/*! \brief _MldSnoopingCfgObject is used internally to represent MldSnoopingCfgObject */
typedef MldSnoopingCfgObject _MldSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.
 *
 * MDMOID_LAN_ETH_INTF 43
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    SINT32    X_BROADCOM_COM_EthernetPriorityMark;	/**< X_BROADCOM_COM_EthernetPriorityMark */
    SINT32    X_BROADCOM_COM_dot1qPvid;	/**< X_BROADCOM_COM_dot1qPvid */
} LanEthIntfObject;

/*! \brief _LanEthIntfObject is used internally to represent LanEthIntfObject */
typedef LanEthIntfObject _LanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_ETH_INTF_STATS 44
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    X_BROADCOM_COM_PacketsSent;	/**< X_BROADCOM_COM_PacketsSent */
    UINT32    X_BROADCOM_COM_PacketsReceived;	/**< X_BROADCOM_COM_PacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
} LanEthIntfStatsObject;

/*! \brief _LanEthIntfStatsObject is used internally to represent LanEthIntfStatsObject */
typedef LanEthIntfStatsObject _LanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.
 *
 * MDMOID_LAN_USB_INTF 45
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    standard;	/**< Standard */
    char *    type;	/**< Type */
    char *    rate;	/**< Rate */
    char *    power;	/**< Power */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
} LanUsbIntfObject;

/*! \brief _LanUsbIntfObject is used internally to represent LanUsbIntfObject */
typedef LanUsbIntfObject _LanUsbIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_USB_INTF_STATS 46
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    cellsSent;	/**< CellsSent */
    UINT32    cellsReceived;	/**< CellsReceived */
    UINT32    X_BROADCOM_COM_PacketsSent;	/**< X_BROADCOM_COM_PacketsSent */
    UINT32    X_BROADCOM_COM_PacketsReceived;	/**< X_BROADCOM_COM_PacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
} LanUsbIntfStatsObject;

/*! \brief _LanUsbIntfStatsObject is used internally to represent LanUsbIntfStatsObject */
typedef LanUsbIntfStatsObject _LanUsbIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.
 *
 * MDMOID_LAN_WLAN 47
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    BSSID;	/**< BSSID */
    char *    maxBitRate;	/**< MaxBitRate */
    UINT32    channel;	/**< Channel */
    char *    SSID;	/**< SSID */
    char *    beaconType;	/**< BeaconType */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    standard;	/**< Standard */
    UINT32    WEPKeyIndex;	/**< WEPKeyIndex */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    WEPEncryptionLevel;	/**< WEPEncryptionLevel */
    char *    basicEncryptionModes;	/**< BasicEncryptionModes */
    char *    basicAuthenticationMode;	/**< BasicAuthenticationMode */
    char *    WPAEncryptionModes;	/**< WPAEncryptionModes */
    char *    WPAAuthenticationMode;	/**< WPAAuthenticationMode */
    char *    IEEE11iEncryptionModes;	/**< IEEE11iEncryptionModes */
    char *    IEEE11iAuthenticationMode;	/**< IEEE11iAuthenticationMode */
    char *    possibleChannels;	/**< PossibleChannels */
    char *    basicDataTransmitRates;	/**< BasicDataTransmitRates */
    char *    operationalDataTransmitRates;	/**< OperationalDataTransmitRates */
    char *    possibleDataTransmitRates;	/**< PossibleDataTransmitRates */
    UBOOL8    insecureOOBAccessEnabled;	/**< InsecureOOBAccessEnabled */
    UBOOL8    beaconAdvertisementEnabled;	/**< BeaconAdvertisementEnabled */
    UBOOL8    radioEnabled;	/**< RadioEnabled */
    UBOOL8    autoRateFallBackEnabled;	/**< AutoRateFallBackEnabled */
    char *    locationDescription;	/**< LocationDescription */
    char *    regulatoryDomain;	/**< RegulatoryDomain */
    UINT32    totalPSKFailures;	/**< TotalPSKFailures */
    UINT32    totalIntegrityFailures;	/**< TotalIntegrityFailures */
    char *    channelsInUse;	/**< ChannelsInUse */
    char *    deviceOperationMode;	/**< DeviceOperationMode */
    UINT32    distanceFromRoot;	/**< DistanceFromRoot */
    char *    peerBSSID;	/**< PeerBSSID */
    char *    authenticationServiceMode;	/**< AuthenticationServiceMode */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    totalAssociations;	/**< TotalAssociations */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    UBOOL8    X_BROADCOM_COM_HideSSID;	/**< X_BROADCOM_COM_HideSSID */
    UINT32    X_BROADCOM_COM_TxPowerPercent;	/**< X_BROADCOM_COM_TxPowerPercent */
    char *    X_BROADCOM_COM_GuestSSID;	/**< X_BROADCOM_COM_GuestSSID */
    char *    X_BROADCOM_COM_GuestBSSID;	/**< X_BROADCOM_COM_GuestBSSID */
    UBOOL8    X_BROADCOM_COM_GuestEnable;	/**< X_BROADCOM_COM_GuestEnable */
    UBOOL8    X_BROADCOM_COM_GuestHiden;	/**< X_BROADCOM_COM_GuestHiden */
    UBOOL8    X_BROADCOM_COM_GuestIsolateClients;	/**< X_BROADCOM_COM_GuestIsolateClients */
    UBOOL8    X_BROADCOM_COM_GuestDisableWMMAdvertise;	/**< X_BROADCOM_COM_GuestDisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_GuestMaxClients;	/**< X_BROADCOM_COM_GuestMaxClients */
    char *    X_BROADCOM_COM_Guest1SSID;	/**< X_BROADCOM_COM_Guest1SSID */
    char *    X_BROADCOM_COM_Guest1BSSID;	/**< X_BROADCOM_COM_Guest1BSSID */
    UBOOL8    X_BROADCOM_COM_Guest1Enable;	/**< X_BROADCOM_COM_Guest1Enable */
    UBOOL8    X_BROADCOM_COM_Guest1Hiden;	/**< X_BROADCOM_COM_Guest1Hiden */
    UBOOL8    X_BROADCOM_COM_Guest1IsolateClients;	/**< X_BROADCOM_COM_Guest1IsolateClients */
    UBOOL8    X_BROADCOM_COM_Guest1DisableWMMAdvertise;	/**< X_BROADCOM_COM_Guest1DisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_Guest1MaxClients;	/**< X_BROADCOM_COM_Guest1MaxClients */
    char *    X_BROADCOM_COM_Guest2SSID;	/**< X_BROADCOM_COM_Guest2SSID */
    char *    X_BROADCOM_COM_Guest2BSSID;	/**< X_BROADCOM_COM_Guest2BSSID */
    UBOOL8    X_BROADCOM_COM_Guest2Enable;	/**< X_BROADCOM_COM_Guest2Enable */
    UBOOL8    X_BROADCOM_COM_Guest2Hiden;	/**< X_BROADCOM_COM_Guest2Hiden */
    UBOOL8    X_BROADCOM_COM_Guest2IsolateClients;	/**< X_BROADCOM_COM_Guest2IsolateClients */
    UBOOL8    X_BROADCOM_COM_Guest2DisableWMMAdvertise;	/**< X_BROADCOM_COM_Guest2DisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_Guest2MaxClients;	/**< X_BROADCOM_COM_Guest2MaxClients */
} LanWlanObject;

/*! \brief _LanWlanObject is used internally to represent LanWlanObject */
typedef LanWlanObject _LanWlanObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}.
 *
 * MDMOID_LAN_WLAN_ASSOCIATED_DEVICE_ENTRY 48
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
    char *    associatedDeviceIPAddress;	/**< AssociatedDeviceIPAddress */
    UBOOL8    associatedDeviceAuthenticationState;	/**< AssociatedDeviceAuthenticationState */
    char *    lastRequestedUnicastCipher;	/**< LastRequestedUnicastCipher */
    char *    lastRequestedMulticastCipher;	/**< LastRequestedMulticastCipher */
    char *    lastPMKId;	/**< LastPMKId */
    char *    lastDataTransmitRate;	/**< LastDataTransmitRate */
    SINT32    X_BROADCOM_COM_Associated;	/**< X_BROADCOM_COM_Associated */
    SINT32    X_BROADCOM_COM_Authorized;	/**< X_BROADCOM_COM_Authorized */
    char *    X_BROADCOM_COM_Ssid;	/**< X_BROADCOM_COM_Ssid */
    char *    X_BROADCOM_COM_Ifcname;	/**< X_BROADCOM_COM_Ifcname */
} LanWlanAssociatedDeviceEntryObject;

/*! \brief _LanWlanAssociatedDeviceEntryObject is used internally to represent LanWlanAssociatedDeviceEntryObject */
typedef LanWlanAssociatedDeviceEntryObject _LanWlanAssociatedDeviceEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}.
 *
 * MDMOID_LAN_WLAN_WEP_KEY 49
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    WEPKey;	/**< WEPKey */
} LanWlanWepKeyObject;

/*! \brief _LanWlanWepKeyObject is used internally to represent LanWlanWepKeyObject */
typedef LanWlanWepKeyObject _LanWlanWepKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}.
 *
 * MDMOID_LAN_WLAN_PRE_SHARED_KEY 50
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    preSharedKey;	/**< PreSharedKey */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
} LanWlanPreSharedKeyObject;

/*! \brief _LanWlanPreSharedKeyObject is used internally to represent LanWlanPreSharedKeyObject */
typedef LanWlanPreSharedKeyObject _LanWlanPreSharedKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.
 *
 * MDMOID_WLAN_ADAPTER 51
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WlanAdapterObject;

/*! \brief _WlanAdapterObject is used internally to represent WlanAdapterObject */
typedef WlanAdapterObject _WlanAdapterObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlBaseCfg.
 *
 * MDMOID_WL_BASE_CFG 52
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlEnbl;	/**< WlEnbl */
    SINT32    wlSsidIdx;	/**< WlSsidIdx */
    char *    wlMode;	/**< WlMode */
    char *    wlCountry;	/**< WlCountry */
    char *    wlPhyType;	/**< WlPhyType */
    SINT32    wlCoreRev;	/**< WlCoreRev */
    char *    wlBasicRate;	/**< WlBasicRate */
    char *    wlProtection;	/**< WlProtection */
    char *    wlPreambleType;	/**< WlPreambleType */
    char *    wlAfterBurnerEn;	/**< WlAfterBurnerEn */
    char *    wlFrameBurst;	/**< WlFrameBurst */
    SINT32    wlChannel;	/**< WlChannel */
    SINT32    wlCurrentChannel;	/**< WlCurrentChannel */
    SINT32    wlFrgThrshld;	/**< WlFrgThrshld */
    SINT32    wlRtsThrshld;	/**< WlRtsThrshld */
    SINT32    wlDtmIntvl;	/**< WlDtmIntvl */
    SINT32    wlBcnIntvl;	/**< WlBcnIntvl */
    SINT32    wlRate;	/**< WlRate */
    SINT32    wlgMode;	/**< WlgMode */
    SINT32    wlBand;	/**< WlBand */
    SINT32    wlMCastRate;	/**< WlMCastRate */
    SINT32    wlInfra;	/**< WlInfra */
    SINT32    wlAntDiv;	/**< WlAntDiv */
    SINT32    wlWme;	/**< WlWme */
    SINT32    wlWmeNoAck;	/**< WlWmeNoAck */
    SINT32    wlWmeApsd;	/**< WlWmeApsd */
    SINT32    wlTxPwrPcnt;	/**< WlTxPwrPcnt */
    SINT32    wlRegMode;	/**< WlRegMode */
    SINT32    wlDfsPreIsm;	/**< WlDfsPreIsm */
    SINT32    wlDfsPostIsm;	/**< WlDfsPostIsm */
    SINT32    wlTpcDb;	/**< WlTpcDb */
    SINT32    wlCsScanTimer;	/**< WlCsScanTimer */
    SINT32    wlGlobalMaxAssoc;	/**< WlGlobalMaxAssoc */
    SINT32    wlMBands;	/**< WlMBands */
    char *    wlVer;	/**< WlVer */
    SINT32    wlNumBss;	/**< WlNumBss */
    SINT32    wlMaxMbss;	/**< WlMaxMbss */
    UBOOL8    wlMbssSupported;	/**< WlMbssSupported */
    SINT32    wlLazyWds;	/**< WlLazyWds */
    SINT32    wlAburnSupported;	/**< WlAburnSupported */
    SINT32    wlAmpduSupported;	/**< WlAmpduSupported */
    SINT32    wlAmsduSupported;	/**< WlAmsduSupported */
    SINT32    wlWmeSupported;	/**< WlWmeSupported */
    SINT32    wlWmfSupported;	/**< WlWmfSupported */
    SINT32    wlVecSupported;	/**< WlVecSupported */
    SINT32    wlVec;	/**< WlVec */
    SINT32    wlIperf;	/**< WlIperf */
} WlBaseCfgObject;

/*! \brief _WlBaseCfgObject is used internally to represent WlBaseCfgObject */
typedef WlBaseCfgObject _WlBaseCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlStaticWdsCfg.{i}.
 *
 * MDMOID_WL_STATIC_WDS_CFG 53
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
} WlStaticWdsCfgObject;

/*! \brief _WlStaticWdsCfgObject is used internally to represent WlStaticWdsCfgObject */
typedef WlStaticWdsCfgObject _WlStaticWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlWdsCfg.{i}.
 *
 * MDMOID_WL_WDS_CFG 54
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlWdsCfgObject;

/*! \brief _WlWdsCfgObject is used internally to represent WlWdsCfgObject */
typedef WlWdsCfgObject _WlWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlScanWdsCfg.{i}.
 *
 * MDMOID_WL_SCAN_WDS_CFG 55
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlScanWdsCfgObject;

/*! \brief _WlScanWdsCfgObject is used internally to represent WlScanWdsCfgObject */
typedef WlScanWdsCfgObject _WlScanWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlMimoCfg.
 *
 * MDMOID_WL_MIMO_CFG 56
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlNBwCap;	/**< WlNBwCap */
    SINT32    wlNCtrlsb;	/**< WlNCtrlsb */
    SINT32    wlNBand;	/**< WlNBand */
    SINT32    wlNMcsidx;	/**< WlNMcsidx */
    char *    wlNProtection;	/**< WlNProtection */
    char *    wlRifs;	/**< WlRifs */
    char *    wlAmpdu;	/**< WlAmpdu */
    char *    wlAmsdu;	/**< WlAmsdu */
    char *    wlNmode;	/**< WlNmode */
    SINT32    wlNReqd;	/**< WlNReqd */
} WlMimoCfgObject;

/*! \brief _WlMimoCfgObject is used internally to represent WlMimoCfgObject */
typedef WlMimoCfgObject _WlMimoCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlSesCfg.
 *
 * MDMOID_WL_SES_CFG 57
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlSesEnable;	/**< WlSesEnable */
    SINT32    wlSesEvent;	/**< WlSesEvent */
    char *    wlSesStates;	/**< WlSesStates */
    char *    wlSesSsid;	/**< WlSesSsid */
    char *    wlSesWpaPsk;	/**< WlSesWpaPsk */
    SINT32    wlSesHide;	/**< WlSesHide */
    SINT32    wlSesAuth;	/**< WlSesAuth */
    char *    wlSesAuthMode;	/**< WlSesAuthMode */
    char *    wlSesWep;	/**< WlSesWep */
    char *    wlSesWpa;	/**< WlSesWpa */
    SINT32    wlSesWdsMode;	/**< WlSesWdsMode */
    SINT32    wlSesClEnable;	/**< WlSesClEnable */
    SINT32    wlSesClEvent;	/**< WlSesClEvent */
    char *    wlSesWdsWsec;	/**< WlSesWdsWsec */
} WlSesCfgObject;

/*! \brief _WlSesCfgObject is used internally to represent WlSesCfgObject */
typedef WlSesCfgObject _WlSesCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.
 *
 * MDMOID_WL_VIRT_INTF_CFG 58
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlIdx;	/**< WlIdx */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
    char *    wlBrName;	/**< WlBrName */
    char *    wlBssMacAddr;	/**< WlBssMacAddr */
    char *    wlWpaPsk;	/**< WlWpaPsk */
    char *    wlWep;	/**< WlWep */
    char *    wlWpa;	/**< WlWpa */
    char *    wlAuthMode;	/**< WlAuthMode */
    SINT32    wlWpaGTKRekey;	/**< WlWpaGTKRekey */
    char *    wlRadiusKey;	/**< WlRadiusKey */
    char *    wlRadiusServerIP;	/**< WlRadiusServerIP */
    SINT32    wlRadiusPort;	/**< WlRadiusPort */
    SINT32    wlAuth;	/**< WlAuth */
    SINT32    wlEnblSsid;	/**< WlEnblSsid */
    SINT32    wlKeyIndex128;	/**< WlKeyIndex128 */
    SINT32    wlKeyIndex64;	/**< WlKeyIndex64 */
    SINT32    wlKeyBit;	/**< WlKeyBit */
    SINT32    wlPreauth;	/**< WlPreauth */
    SINT32    wlNetReauth;	/**< WlNetReauth */
    SINT32    wlHide;	/**< WlHide */
    SINT32    wlAPIsolation;	/**< WlAPIsolation */
    SINT32    wlMaxAssoc;	/**< WlMaxAssoc */
    SINT32    wlDisableWme;	/**< WlDisableWme */
    char *    wlFltMacMode;	/**< WlFltMacMode */
    SINT32    wlEnableWmf;	/**< WlEnableWmf */
} WlVirtIntfCfgObject;

/*! \brief _WlVirtIntfCfgObject is used internally to represent WlVirtIntfCfgObject */
typedef WlVirtIntfCfgObject _WlVirtIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.VirtIntf.{i}.WlMacFltCfg.{i}.
 *
 * MDMOID_WL_MAC_FLT 59
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlMacFltObject;

/*! \brief _WlMacFltObject is used internally to represent WlMacFltObject */
typedef WlMacFltObject _WlMacFltObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.VirtIntf.{i}.WlKey64Cfg.{i}.
 *
 * MDMOID_WL_KEY64_CFG 60
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey64;	/**< WlKey64 */
} WlKey64CfgObject;

/*! \brief _WlKey64CfgObject is used internally to represent WlKey64CfgObject */
typedef WlKey64CfgObject _WlKey64CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.VirtIntf.{i}.WlKey128Cfg.{i}.
 *
 * MDMOID_WL_KEY128_CFG 61
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey128;	/**< WlKey128 */
} WlKey128CfgObject;

/*! \brief _WlKey128CfgObject is used internally to represent WlKey128CfgObject */
typedef WlKey128CfgObject _WlKey128CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.VirtIntf.{i}.WlWpsCfg.
 *
 * MDMOID_WL_WPS_CFG 62
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wsc_config_state;	/**< Wsc_config_state */
    char *    wsc_mode;	/**< Wsc_mode */
} WlWpsCfgObject;

/*! \brief _WlWpsCfgObject is used internally to represent WlWpsCfgObject */
typedef WlWpsCfgObject _WlWpsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.
 *
 * MDMOID_LAN_HOSTS 63
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    hostNumberOfEntries;	/**< HostNumberOfEntries */
} LanHostsObject;

/*! \brief _LanHostsObject is used internally to represent LanHostsObject */
typedef LanHostsObject _LanHostsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}.
 *
 * MDMOID_LAN_HOST_ENTRY 64
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
    char *    addressSource;	/**< AddressSource */
    SINT32    leaseTimeRemaining;	/**< LeaseTimeRemaining */
    char *    MACAddress;	/**< MACAddress */
    char *    hostName;	/**< HostName */
    char *    interfaceType;	/**< InterfaceType */
    UBOOL8    active;	/**< Active */
} LanHostEntryObject;

/*! \brief _LanHostEntryObject is used internally to represent LanHostEntryObject */
typedef LanHostEntryObject _LanHostEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.
 *
 * MDMOID_WAN_DEV 65
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANConnectionNumberOfEntries;	/**< WANConnectionNumberOfEntries */
} WanDevObject;

/*! \brief _WanDevObject is used internally to represent WanDevObject */
typedef WanDevObject _WanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig.
 *
 * MDMOID_WAN_COMMON_INTF_CFG 66
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enabledForInternet;	/**< EnabledForInternet */
    char *    WANAccessType;	/**< WANAccessType */
    UINT32    layer1UpstreamMaxBitRate;	/**< Layer1UpstreamMaxBitRate */
    UINT32    layer1DownstreamMaxBitRate;	/**< Layer1DownstreamMaxBitRate */
    char *    physicalLinkStatus;	/**< PhysicalLinkStatus */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    maximumActiveConnections;	/**< MaximumActiveConnections */
    UINT32    numberOfActiveConnections;	/**< NumberOfActiveConnections */
} WanCommonIntfCfgObject;

/*! \brief _WanCommonIntfCfgObject is used internally to represent WanCommonIntfCfgObject */
typedef WanCommonIntfCfgObject _WanCommonIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_XTM_Interface_Stats.{i}.
 *
 * MDMOID_XTM_INTERFACE_STATS 67
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    port;	/**< Port */
    char *    status;	/**< Status */
    UINT32    inOctets;	/**< InOctets */
    UINT32    outOctets;	/**< OutOctets */
    UINT32    inPackets;	/**< InPackets */
    UINT32    outPackets;	/**< OutPackets */
    UINT32    inOAMCells;	/**< InOAMCells */
    UINT32    outOAMCells;	/**< OutOAMCells */
    UINT32    inASMCells;	/**< InASMCells */
    UINT32    outASMCells;	/**< OutASMCells */
    UINT32    inPacketErrors;	/**< InPacketErrors */
    UINT32    inCellErrors;	/**< InCellErrors */
} XtmInterfaceStatsObject;

/*! \brief _XtmInterfaceStatsObject is used internally to represent XtmInterfaceStatsObject */
typedef XtmInterfaceStatsObject _XtmInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.
 *
 * MDMOID_WAN_DSL_INTF_CFG 68
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    linkEncapsulationUsed;	/**< LinkEncapsulationUsed */
    char *    linkEncapsulationSupported;	/**< LinkEncapsulationSupported */
    char *    linkEncapsulationRequested;	/**< LinkEncapsulationRequested */
    char *    modulationType;	/**< ModulationType */
    char *    lineEncoding;	/**< LineEncoding */
    char *    dataPath;	/**< DataPath */
    UINT32    interleaveDepth;	/**< InterleaveDepth */
    SINT32    lineNumber;	/**< LineNumber */
    UINT32    upstreamCurrRate;	/**< UpstreamCurrRate */
    UINT32    downstreamCurrRate;	/**< DownstreamCurrRate */
    UINT32    X_BROADCOM_COM_UpstreamCurrRate_2;	/**< X_BROADCOM_COM_UpstreamCurrRate_2 */
    UINT32    X_BROADCOM_COM_DownstreamCurrRate_2;	/**< X_BROADCOM_COM_DownstreamCurrRate_2 */
    UINT32    upstreamMaxRate;	/**< UpstreamMaxRate */
    UINT32    downstreamMaxRate;	/**< DownstreamMaxRate */
    SINT32    upstreamNoiseMargin;	/**< UpstreamNoiseMargin */
    SINT32    downstreamNoiseMargin;	/**< DownstreamNoiseMargin */
    SINT32    upstreamAttenuation;	/**< UpstreamAttenuation */
    SINT32    downstreamAttenuation;	/**< DownstreamAttenuation */
    SINT32    upstreamPower;	/**< UpstreamPower */
    SINT32    downstreamPower;	/**< DownstreamPower */
    char *    ATURVendor;	/**< ATURVendor */
    UINT32    ATURCountry;	/**< ATURCountry */
    char *    ATUCVendor;	/**< ATUCVendor */
    UINT32    ATUCCountry;	/**< ATUCCountry */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    char *    X_BROADCOM_COM_AdslVersion;	/**< X_BROADCOM_COM_AdslVersion */
    char *    X_BROADCOM_COM_AdslModulationCfg;	/**< X_BROADCOM_COM_AdslModulationCfg */
    UBOOL8    X_BROADCOM_COM_ADSL2_AnnexM;	/**< X_BROADCOM_COM_ADSL2_AnnexM */
    char *    X_BROADCOM_COM_PhoneLinePair;	/**< X_BROADCOM_COM_PhoneLinePair */
    char *    X_BROADCOM_COM_Bitswap;	/**< X_BROADCOM_COM_Bitswap */
    char *    X_BROADCOM_COM_SRA;	/**< X_BROADCOM_COM_SRA */
    char *    X_BROADCOM_COM_TrellisD;	/**< X_BROADCOM_COM_TrellisD */
    char *    X_BROADCOM_COM_TrellisU;	/**< X_BROADCOM_COM_TrellisU */
    char *    X_BROADCOM_COM_SNR;	/**< X_BROADCOM_COM_SNR */
    char *    X_BROADCOM_COM_Bitmap;	/**< X_BROADCOM_COM_Bitmap */
    UINT32    X_BROADCOM_COM_QueueSize;	/**< X_BROADCOM_COM_QueueSize */
    UINT32    X_BROADCOM_COM_NumTxQueues;	/**< X_BROADCOM_COM_NumTxQueues */
    char *    X_BROADCOM_COM_UpstreamS;	/**< X_BROADCOM_COM_UpstreamS */
    char *    X_BROADCOM_COM_DownstreamS;	/**< X_BROADCOM_COM_DownstreamS */
    UINT32    X_BROADCOM_COM_UpstreamR;	/**< X_BROADCOM_COM_UpstreamR */
    UINT32    X_BROADCOM_COM_DownstreamR;	/**< X_BROADCOM_COM_DownstreamR */
    UINT32    X_BROADCOM_COM_UpstreamK;	/**< X_BROADCOM_COM_UpstreamK */
    UINT32    X_BROADCOM_COM_DownstreamK;	/**< X_BROADCOM_COM_DownstreamK */
    char *    X_BROADCOM_COM_UpstreamDelay;	/**< X_BROADCOM_COM_UpstreamDelay */
    char *    X_BROADCOM_COM_UpstreamDelay_2;	/**< X_BROADCOM_COM_UpstreamDelay_2 */
    char *    X_BROADCOM_COM_DownstreamDelay;	/**< X_BROADCOM_COM_DownstreamDelay */
    char *    X_BROADCOM_COM_DownstreamDelay_2;	/**< X_BROADCOM_COM_DownstreamDelay_2 */
    char *    X_BROADCOM_COM_DownstreamINP;	/**< X_BROADCOM_COM_DownstreamINP */
    char *    X_BROADCOM_COM_DownstreamINP_2;	/**< X_BROADCOM_COM_DownstreamINP_2 */
    char *    X_BROADCOM_COM_UpstreamINP;	/**< X_BROADCOM_COM_UpstreamINP */
    char *    X_BROADCOM_COM_UpstreamINP_2;	/**< X_BROADCOM_COM_UpstreamINP_2 */
    UINT32    X_BROADCOM_COM_UpstreamD;	/**< X_BROADCOM_COM_UpstreamD */
    UINT32    X_BROADCOM_COM_UpstreamD_2;	/**< X_BROADCOM_COM_UpstreamD_2 */
    UINT32    X_BROADCOM_COM_DownstreamD;	/**< X_BROADCOM_COM_DownstreamD */
    UINT32    X_BROADCOM_COM_DownstreamD_2;	/**< X_BROADCOM_COM_DownstreamD_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB;	/**< X_BROADCOM_COM_ADSL2_UpstreamB */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamB_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB;	/**< X_BROADCOM_COM_ADSL2_DownstreamB */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamB_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM;	/**< X_BROADCOM_COM_ADSL2_UpstreamM */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamM_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM;	/**< X_BROADCOM_COM_ADSL2_DownstreamM */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamM_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT;	/**< X_BROADCOM_COM_ADSL2_UpstreamT */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamT_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT;	/**< X_BROADCOM_COM_ADSL2_DownstreamT */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamT_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR;	/**< X_BROADCOM_COM_ADSL2_UpstreamR */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamR_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR;	/**< X_BROADCOM_COM_ADSL2_DownstreamR */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamR_2 */
    char *    X_BROADCOM_COM_ADSL2_UpstreamS;	/**< X_BROADCOM_COM_ADSL2_UpstreamS */
    char *    X_BROADCOM_COM_ADSL2_UpstreamS_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamS_2 */
    char *    X_BROADCOM_COM_ADSL2_DownstreamS;	/**< X_BROADCOM_COM_ADSL2_DownstreamS */
    char *    X_BROADCOM_COM_ADSL2_DownstreamS_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamS_2 */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL;	/**< X_BROADCOM_COM_ADSL2_UpstreamL */
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamL_2 */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL;	/**< X_BROADCOM_COM_ADSL2_DownstreamL */
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamL_2 */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8a;	/**< X_BROADCOM_COM_VDSL_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8b;	/**< X_BROADCOM_COM_VDSL_8b */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8c;	/**< X_BROADCOM_COM_VDSL_8c */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8d;	/**< X_BROADCOM_COM_VDSL_8d */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12a;	/**< X_BROADCOM_COM_VDSL_12a */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12b;	/**< X_BROADCOM_COM_VDSL_12b */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_17a;	/**< X_BROADCOM_COM_VDSL_17a */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_30a;	/**< X_BROADCOM_COM_VDSL_30a */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_US0_8a;	/**< X_BROADCOM_COM_VDSL_US0_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI;	/**< X_BROADCOM_COM_VDSL_UpstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI_2;	/**< X_BROADCOM_COM_VDSL_UpstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI;	/**< X_BROADCOM_COM_VDSL_DownstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI_2;	/**< X_BROADCOM_COM_VDSL_DownstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN;	/**< X_BROADCOM_COM_VDSL_UpstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN_2;	/**< X_BROADCOM_COM_VDSL_UpstreamN_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN;	/**< X_BROADCOM_COM_VDSL_DownstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN_2;	/**< X_BROADCOM_COM_VDSL_DownstreamN_2 */
#endif
    char *    X_BROADCOM_COM_LinkPowerState;	/**< X_BROADCOM_COM_LinkPowerState */
} WanDslIntfCfgObject;

/*! \brief _WanDslIntfCfgObject is used internally to represent WanDslIntfCfgObject */
typedef WanDslIntfCfgObject _WanDslIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.X_BROADCOM_COM_BertTest.
 *
 * MDMOID_WAN_BERT_TEST 69
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    bertTestMode;	/**< BertTestMode */
    UINT32    bertTestDuration;	/**< BertTestDuration */
    char *    bertTestStatus;	/**< BertTestStatus */
    UINT32    totalTime;	/**< TotalTime */
    UINT32    elapsedTime;	/**< ElapsedTime */
    UINT32    bitsTestedCntHigh;	/**< BitsTestedCntHigh */
    UINT32    bitsTestedCntLow;	/**< BitsTestedCntLow */
    UINT32    errBitsCntHigh;	/**< ErrBitsCntHigh */
    UINT32    errBitsCntLow;	/**< ErrBitsCntLow */
} WanBertTestObject;

/*! \brief _WanBertTestObject is used internally to represent WanBertTestObject */
typedef WanBertTestObject _WanBertTestObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.
 *
 * MDMOID_WAN_DSL_INTF_STATS 70
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslIntfStatsObject;

/*! \brief _WanDslIntfStatsObject is used internally to represent WanDslIntfStatsObject */
typedef WanDslIntfStatsObject _WanDslIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total.
 *
 * MDMOID_WAN_DSL_INTF_STATS_TOTAL 71
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_RxRsCorrectable;	/**< X_BROADCOM_COM_RxRsCorrectable */
    UINT32    X_BROADCOM_COM_RxRsCorrectable_2;	/**< X_BROADCOM_COM_RxRsCorrectable_2 */
    UINT32    X_BROADCOM_COM_TxRsCorrectable;	/**< X_BROADCOM_COM_TxRsCorrectable */
    UINT32    X_BROADCOM_COM_TxRsCorrectable_2;	/**< X_BROADCOM_COM_TxRsCorrectable_2 */
    UINT32    X_BROADCOM_COM_TxRsUncorrectable;	/**< X_BROADCOM_COM_TxRsUncorrectable */
    UINT32    X_BROADCOM_COM_TxRsUncorrectable_2;	/**< X_BROADCOM_COM_TxRsUncorrectable_2 */
    UINT32    X_BROADCOM_COM_RxRsUncorrectable;	/**< X_BROADCOM_COM_RxRsUncorrectable */
    UINT32    X_BROADCOM_COM_RxRsUncorrectable_2;	/**< X_BROADCOM_COM_RxRsUncorrectable_2 */
    UINT32    X_BROADCOM_COM_TxRsWords;	/**< X_BROADCOM_COM_TxRsWords */
    UINT32    X_BROADCOM_COM_TxRsWords_2;	/**< X_BROADCOM_COM_TxRsWords_2 */
    UINT32    X_BROADCOM_COM_RxRsWords;	/**< X_BROADCOM_COM_RxRsWords */
    UINT32    X_BROADCOM_COM_RxRsWords_2;	/**< X_BROADCOM_COM_RxRsWords_2 */
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    X_BROADCOM_COM_ReceiveBlocks_2;	/**< X_BROADCOM_COM_ReceiveBlocks_2 */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    X_BROADCOM_COM_TransmitBlocks_2;	/**< X_BROADCOM_COM_TransmitBlocks_2 */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    X_BROADCOM_COM_FECErrors_2;	/**< X_BROADCOM_COM_FECErrors_2 */
    UINT32    X_BROADCOM_COM_ATUCFECErrors_2;	/**< X_BROADCOM_COM_ATUCFECErrors_2 */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    X_BROADCOM_COM_HECErrors_2;	/**< X_BROADCOM_COM_HECErrors_2 */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    X_BROADCOM_COM_ATUCHECErrors_2;	/**< X_BROADCOM_COM_ATUCHECErrors_2 */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    X_BROADCOM_COM_CRCErrors_2;	/**< X_BROADCOM_COM_CRCErrors_2 */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
    UINT32    X_BROADCOM_COM_ATUCCRCErrors_2;	/**< X_BROADCOM_COM_ATUCCRCErrors_2 */
    UINT32    X_BROADCOM_COM_UpstreamUas;	/**< X_BROADCOM_COM_UpstreamUas */
    UINT32    X_BROADCOM_COM_DownstreamUas;	/**< X_BROADCOM_COM_DownstreamUas */
    UINT32    X_BROADCOM_COM_UpstreamEs;	/**< X_BROADCOM_COM_UpstreamEs */
    UINT32    X_BROADCOM_COM_UpstreamSes;	/**< X_BROADCOM_COM_UpstreamSes */
    UINT32    X_BROADCOM_COM_UpstreamBitErrors;	/**< X_BROADCOM_COM_UpstreamBitErrors */
    UINT32    X_BROADCOM_COM_UpstreamBitErrors_2;	/**< X_BROADCOM_COM_UpstreamBitErrors_2 */
    UINT32    X_BROADCOM_COM_DownstreamBitErrors;	/**< X_BROADCOM_COM_DownstreamBitErrors */
    UINT32    X_BROADCOM_COM_DownstreamBitErrors_2;	/**< X_BROADCOM_COM_DownstreamBitErrors_2 */
    UINT32    X_BROADCOM_COM_UpstreamDataCells;	/**< X_BROADCOM_COM_UpstreamDataCells */
    UINT32    X_BROADCOM_COM_UpstreamDataCells_2;	/**< X_BROADCOM_COM_UpstreamDataCells_2 */
    UINT32    X_BROADCOM_COM_DownstreamDataCells;	/**< X_BROADCOM_COM_DownstreamDataCells */
    UINT32    X_BROADCOM_COM_DownstreamDataCells_2;	/**< X_BROADCOM_COM_DownstreamDataCells_2 */
    UINT32    X_BROADCOM_COM_UpstreamTotalCells;	/**< X_BROADCOM_COM_UpstreamTotalCells */
    UINT32    X_BROADCOM_COM_UpstreamTotalCells_2;	/**< X_BROADCOM_COM_UpstreamTotalCells_2 */
    UINT32    X_BROADCOM_COM_DownstreamTotalCells;	/**< X_BROADCOM_COM_DownstreamTotalCells */
    UINT32    X_BROADCOM_COM_DownstreamTotalCells_2;	/**< X_BROADCOM_COM_DownstreamTotalCells_2 */
    UINT32    X_BROADCOM_COM_UpstreamLCD;	/**< X_BROADCOM_COM_UpstreamLCD */
    UINT32    X_BROADCOM_COM_UpstreamLCD_2;	/**< X_BROADCOM_COM_UpstreamLCD_2 */
    UINT32    X_BROADCOM_COM_DownstreamLCD;	/**< X_BROADCOM_COM_DownstreamLCD */
    UINT32    X_BROADCOM_COM_DownstreamLCD_2;	/**< X_BROADCOM_COM_DownstreamLCD_2 */
    UINT32    X_BROADCOM_COM_UpstreamOCD;	/**< X_BROADCOM_COM_UpstreamOCD */
    UINT32    X_BROADCOM_COM_UpstreamOCD_2;	/**< X_BROADCOM_COM_UpstreamOCD_2 */
    UINT32    X_BROADCOM_COM_DownstreamOCD;	/**< X_BROADCOM_COM_DownstreamOCD */
    UINT32    X_BROADCOM_COM_DownstreamOCD_2;	/**< X_BROADCOM_COM_DownstreamOCD_2 */
} WanDslIntfStatsTotalObject;

/*! \brief _WanDslIntfStatsTotalObject is used internally to represent WanDslIntfStatsTotalObject */
typedef WanDslIntfStatsTotalObject _WanDslIntfStatsTotalObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.
 *
 * MDMOID_WAN_ETH_INTF 72
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
} WanEthIntfObject;

/*! \brief _WanEthIntfObject is used internally to represent WanEthIntfObject */
typedef WanEthIntfObject _WanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats.
 *
 * MDMOID_WAN_ETH_INTF_STATS 73
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanEthIntfStatsObject;

/*! \brief _WanEthIntfStatsObject is used internally to represent WanEthIntfStatsObject */
typedef WanEthIntfStatsObject _WanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.
 *
 * MDMOID_WAN_DSL_PROPRIETARY_DIAG 74
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslProprietaryDiagObject;

/*! \brief _WanDslProprietaryDiagObject is used internally to represent WanDslProprietaryDiagObject */
typedef WanDslProprietaryDiagObject _WanDslProprietaryDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.PeakLineNoise.
 *
 * MDMOID_WAN_DSL_DIAG_PLN 75
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticState;	/**< DiagnosticState */
    char *    PLNThldBB;	/**< PLNThldBB */
    char *    PLNThldPerTone;	/**< PLNThldPerTone */
    UINT32    PLNDurationNbBins;	/**< PLNDurationNbBins */
    char *    PLNDurationBins;	/**< PLNDurationBins */
    UINT32    PLNIntrArvNbBins;	/**< PLNIntrArvNbBins */
    char *    PLNIntrArvlBins;	/**< PLNIntrArvlBins */
    char *    PLNValueps;	/**< PLNValueps */
    char *    PLNThldCntps;	/**< PLNThldCntps */
    char *    PLNDurationHist;	/**< PLNDurationHist */
    char *    PLNIntrArvlHist;	/**< PLNIntrArvlHist */
    UINT32    PLNPerToneCounter;	/**< PLNPerToneCounter */
    UINT32    PLNBBCounter;	/**< PLNBBCounter */
} WanDslDiagPlnObject;

/*! \brief _WanDslDiagPlnObject is used internally to represent WanDslDiagPlnObject */
typedef WanDslDiagPlnObject _WanDslDiagPlnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.NonLinearity.
 *
 * MDMOID_WAN_DSL_DIAG_NON_LINEARITY 76
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    maxCriticalDistNoise;	/**< MaxCriticalDistNoise */
    UINT32    distAffectedBits;	/**< DistAffectedBits */
    char *    distNoisedB;	/**< DistNoisedB */
} WanDslDiagNonLinearityObject;

/*! \brief _WanDslDiagNonLinearityObject is used internally to represent WanDslDiagNonLinearityObject */
typedef WanDslDiagNonLinearityObject _WanDslDiagNonLinearityObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.
 *
 * MDMOID_WAN_CONN_DEVICE 77
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANIPConnectionNumberOfEntries;	/**< WANIPConnectionNumberOfEntries */
    UINT32    WANPPPConnectionNumberOfEntries;	/**< WANPPPConnectionNumberOfEntries */
} WanConnDeviceObject;

/*! \brief _WanConnDeviceObject is used internally to represent WanConnDeviceObject */
typedef WanConnDeviceObject _WanConnDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF4EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_END_TO_END_LOOPBACK_DIAG 78
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF4EndToEndLoopbackDiagObject is used internally to represent WanAtmF4EndToEndLoopbackDiagObject */
typedef WanAtmF4EndToEndLoopbackDiagObject _WanAtmF4EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF4LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_LOOPBACK_DIAG 79
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4LoopbackDiagObject;

/*! \brief _WanAtmF4LoopbackDiagObject is used internally to represent WanAtmF4LoopbackDiagObject */
typedef WanAtmF4LoopbackDiagObject _WanAtmF4LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF5EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F5_END_TO_END_LOOPBACK_DIAG 80
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF5EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF5EndToEndLoopbackDiagObject is used internally to represent WanAtmF5EndToEndLoopbackDiagObject */
typedef WanAtmF5EndToEndLoopbackDiagObject _WanAtmF5EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.
 *
 * MDMOID_WAN_DSL_LINK_CFG 81
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    linkType;	/**< LinkType */
    UBOOL8    autoConfig;	/**< AutoConfig */
    char *    modulationType;	/**< ModulationType */
    char *    destinationAddress;	/**< DestinationAddress */
    char *    ATMEncapsulation;	/**< ATMEncapsulation */
    char *    ATMAAL;	/**< ATMAAL */
    char *    ATMQoS;	/**< ATMQoS */
    UINT32    ATMPeakCellRate;	/**< ATMPeakCellRate */
    UINT32    ATMMaximumBurstSize;	/**< ATMMaximumBurstSize */
    UINT32    ATMSustainableCellRate;	/**< ATMSustainableCellRate */
    UINT32    X_BROADCOM_COM_ATMMinimumCellRate;	/**< X_BROADCOM_COM_ATMMinimumCellRate */
    UBOOL8    X_BROADCOM_COM_ATMEnbQos;	/**< X_BROADCOM_COM_ATMEnbQos */
    char *    X_BROADCOM_COM_ATMStatus;	/**< X_BROADCOM_COM_ATMStatus */
    UINT32    X_BROADCOM_COM_ATMInterfaceId;	/**< X_BROADCOM_COM_ATMInterfaceId */
    char *    X_BROADCOM_COM_MacAddress;	/**< X_BROADCOM_COM_MacAddress */
    UINT32    AAL5CRCErrors;	/**< AAL5CRCErrors */
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
} WanDslLinkCfgObject;

/*! \brief _WanDslLinkCfgObject is used internally to represent WanDslLinkCfgObject */
typedef WanDslLinkCfgObject _WanDslLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.X_BROADCOM_COM_ATM_PARMS.
 *
 * MDMOID_WAN_DSL_ATM_PARAMS 82
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    ATMFreeCellQSize;	/**< ATMFreeCellQSize */
    UINT32    ATMFreePacketQSize;	/**< ATMFreePacketQSize */
    UINT32    ATMFreePacketQBufferSize;	/**< ATMFreePacketQBufferSize */
    UINT32    ATMFreePacketQBufferOffset;	/**< ATMFreePacketQBufferOffset */
    UINT32    ATMReceiveCellQSize;	/**< ATMReceiveCellQSize */
    UINT32    ATMReceivePacketQSize;	/**< ATMReceivePacketQSize */
    UINT32    ATMTransmitFifoPriority;	/**< ATMTransmitFifoPriority */
    UINT32    ATMAal5CpcsMaxSduLength;	/**< ATMAal5CpcsMaxSduLength */
    UINT32    ATMAal2SscsMaxSsarSduLength;	/**< ATMAal2SscsMaxSsarSduLength */
} WanDslAtmParamsObject;

/*! \brief _WanDslAtmParamsObject is used internally to represent WanDslAtmParamsObject */
typedef WanDslAtmParamsObject _WanDslAtmParamsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM5_LOOPBACK_DIAG 83
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtm5LoopbackDiagObject;

/*! \brief _WanAtm5LoopbackDiagObject is used internally to represent WanAtm5LoopbackDiagObject */
typedef WanAtm5LoopbackDiagObject _WanAtm5LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.
 *
 * MDMOID_WAN_PTM_LINK_CFG 84
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    MACAddress;	/**< MACAddress */
    UINT32    X_BROADCOM_COM_PTMPortId;	/**< X_BROADCOM_COM_PTMPortId */
    UBOOL8    X_BROADCOM_COM_PTMPriorityLow;	/**< X_BROADCOM_COM_PTMPriorityLow */
    UBOOL8    X_BROADCOM_COM_PTMPriorityHigh;	/**< X_BROADCOM_COM_PTMPriorityHigh */
    UBOOL8    X_BROADCOM_COM_PTMEnbQos;	/**< X_BROADCOM_COM_PTMEnbQos */
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
} WanPtmLinkCfgObject;

/*! \brief _WanPtmLinkCfgObject is used internally to represent WanPtmLinkCfgObject */
typedef WanPtmLinkCfgObject _WanPtmLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig.
 *
 * MDMOID_WAN_ETH_LINK_CFG 85
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ethernetLinkStatus;	/**< EthernetLinkStatus */
} WanEthLinkCfgObject;

/*! \brief _WanEthLinkCfgObject is used internally to represent WanEthLinkCfgObject */
typedef WanEthLinkCfgObject _WanEthLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.
 *
 * MDMOID_WAN_IP_CONN 86
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    UINT32    uptime;	/**< Uptime */
    char *    lastConnectionError;	/**< LastConnectionError */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_BROADCOM_COM_FullconeNATEnabled;	/**< X_BROADCOM_COM_FullconeNATEnabled */
    char *    addressingType;	/**< AddressingType */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    X_BROADCOM_COM_BcastAddr;	/**< X_BROADCOM_COM_BcastAddr */
    char *    defaultGateway;	/**< DefaultGateway */
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
    UBOOL8    X_BROADCOM_COM_IGMPEnabled;	/**< X_BROADCOM_COM_IGMPEnabled */
    UBOOL8    X_BROADCOM_COM_MLDEnabled;	/**< X_BROADCOM_COM_MLDEnabled */
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    UBOOL8    DNSOverrideAllowed;	/**< DNSOverrideAllowed */
    char *    DNSServers;	/**< DNSServers */
    UINT32    maxMTUSize;	/**< MaxMTUSize */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    char *    X_BROADCOM_COM_RipOperationMode;	/**< X_BROADCOM_COM_RipOperationMode */
    char *    X_BROADCOM_COM_RipDebugMode;	/**< X_BROADCOM_COM_RipDebugMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    SINT32    X_BROADCOM_COM_ConnectionId;	/**< X_BROADCOM_COM_ConnectionId */
    UINT32    X_BROADCOM_COM_DhcpcPid;	/**< X_BROADCOM_COM_DhcpcPid */
    SINT32    X_BROADCOM_COM_VlanMux8021p;	/**< X_BROADCOM_COM_VlanMux8021p */
    SINT32    X_BROADCOM_COM_VlanMuxID;	/**< X_BROADCOM_COM_VlanMuxID */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    char *    X_BROADCOM_COM_Op60VenderID;	/**< X_BROADCOM_COM_Op60VenderID */
    char *    X_BROADCOM_COM_Op61DUID;	/**< X_BROADCOM_COM_Op61DUID */
    char *    X_BROADCOM_COM_Op61IAID;	/**< X_BROADCOM_COM_Op61IAID */
    UBOOL8    X_BROADCOM_COM_Op125Enabled;	/**< X_BROADCOM_COM_Op125Enabled */
    UBOOL8    X_BROADCOM_COM_IPv6Enabled;	/**< X_BROADCOM_COM_IPv6Enabled */
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6AddressingType;	/**< X_BROADCOM_COM_IPv6AddressingType */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_ExternalIPv6Address;	/**< X_BROADCOM_COM_ExternalIPv6Address */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_ExternalIPv6AddressPrefixLength;	/**< X_BROADCOM_COM_ExternalIPv6AddressPrefixLength */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_DefaultIPv6Gateway;	/**< X_BROADCOM_COM_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6DefaultConnectionService;	/**< X_BROADCOM_COM_IPv6DefaultConnectionService */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6DNSEnabled;	/**< X_BROADCOM_COM_IPv6DNSEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DNSServers;	/**< X_BROADCOM_COM_IPv6DNSServers */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6PrefixDelegationEnabled;	/**< X_BROADCOM_COM_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6SitePrefix;	/**< X_BROADCOM_COM_IPv6SitePrefix */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixPltime;	/**< X_BROADCOM_COM_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixVltime;	/**< X_BROADCOM_COM_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_Dhcp6cPid;	/**< X_BROADCOM_COM_Dhcp6cPid */
#endif
} WanIpConnObject;

/*! \brief _WanIpConnObject is used internally to represent WanIpConnObject */
typedef WanIpConnObject _WanIpConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORTMAPPING 87
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_BROADCOM_COM_ExternalPortEnd;	/**< X_BROADCOM_COM_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_BROADCOM_COM_InternalPortEnd;	/**< X_BROADCOM_COM_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
} WanIpConnPortmappingObject;

/*! \brief _WanIpConnPortmappingObject is used internally to represent WanIpConnPortmappingObject */
typedef WanIpConnPortmappingObject _WanIpConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_PortTriggering.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORT_TRIGGERING 88
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanIpConnPortTriggeringObject;

/*! \brief _WanIpConnPortTriggeringObject is used internally to represent WanIpConnPortTriggeringObject */
typedef WanIpConnPortTriggeringObject _WanIpConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_WAN_IP_CONN_FIREWALL_EXCEPTION 89
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanIpConnFirewallExceptionObject;

/*! \brief _WanIpConnFirewallExceptionObject is used internally to represent WanIpConnFirewallExceptionObject */
typedef WanIpConnFirewallExceptionObject _WanIpConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_MacFilterObj.
 *
 * MDMOID_MAC_FILTER 90
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    policy;	/**< Policy */
} MacFilterObject;

/*! \brief _MacFilterObject is used internally to represent MacFilterObject */
typedef MacFilterObject _MacFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_MacFilterObj.X_BROADCOM_COM_MacFilterCfg.{i}.
 *
 * MDMOID_MAC_FILTER_CFG 91
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    protocol;	/**< Protocol */
    char *    direction;	/**< Direction */
    char *    sourceMAC;	/**< SourceMAC */
    char *    destinationMAC;	/**< DestinationMAC */
} MacFilterCfgObject;

/*! \brief _MacFilterCfgObject is used internally to represent MacFilterCfgObject */
typedef MacFilterCfgObject _MacFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats.
 *
 * MDMOID_WAN_IP_CONN_STATS 92
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
} WanIpConnStatsObject;

/*! \brief _WanIpConnStatsObject is used internally to represent WanIpConnStatsObject */
typedef WanIpConnStatsObject _WanIpConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.
 *
 * MDMOID_WAN_PPP_CONN 93
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    char *    lastConnectionError;	/**< LastConnectionError */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_BROADCOM_COM_FullconeNATEnabled;	/**< X_BROADCOM_COM_FullconeNATEnabled */
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
    UBOOL8    X_BROADCOM_COM_IGMPEnabled;	/**< X_BROADCOM_COM_IGMPEnabled */
    UBOOL8    X_BROADCOM_COM_MLDEnabled;	/**< X_BROADCOM_COM_MLDEnabled */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    PPPEncryptionProtocol;	/**< PPPEncryptionProtocol */
    char *    PPPCompressionProtocol;	/**< PPPCompressionProtocol */
    char *    PPPAuthenticationProtocol;	/**< PPPAuthenticationProtocol */
    UBOOL8    X_BROADCOM_COM_IPExtension;	/**< X_BROADCOM_COM_IPExtension */
    UBOOL8    X_BROADCOM_COM_UseStaticIPAddress;	/**< X_BROADCOM_COM_UseStaticIPAddress */
    char *    X_BROADCOM_COM_LocalIPAddress;	/**< X_BROADCOM_COM_LocalIPAddress */
    SINT32    X_BROADCOM_COM_ConnectionId;	/**< X_BROADCOM_COM_ConnectionId */
    UINT32    X_BROADCOM_COM_PppdPid;	/**< X_BROADCOM_COM_PppdPid */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    char *    X_BROADCOM_COM_BcastAddr;	/**< X_BROADCOM_COM_BcastAddr */
    char *    X_BROADCOM_COM_DefaultGateway;	/**< X_BROADCOM_COM_DefaultGateway */
    UBOOL8    X_BROADCOM_COM_Enable_Debug;	/**< X_BROADCOM_COM_Enable_Debug */
    UBOOL8    X_BROADCOM_COM_AddPppToBridge;	/**< X_BROADCOM_COM_AddPppToBridge */
    SINT32    X_BROADCOM_COM_VlanMux8021p;	/**< X_BROADCOM_COM_VlanMux8021p */
    SINT32    X_BROADCOM_COM_VlanMuxID;	/**< X_BROADCOM_COM_VlanMuxID */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    UINT32    currentMRUSize;	/**< CurrentMRUSize */
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    UBOOL8    DNSOverrideAllowed;	/**< DNSOverrideAllowed */
    char *    DNSServers;	/**< DNSServers */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    transportType;	/**< TransportType */
    char *    PPPoEServiceName;	/**< PPPoEServiceName */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    UINT32    PPPLCPEcho;	/**< PPPLCPEcho */
    UINT32    PPPLCPEchoRetry;	/**< PPPLCPEchoRetry */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    UBOOL8    X_BROADCOM_COM_IPv6Enabled;	/**< X_BROADCOM_COM_IPv6Enabled */
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6AddressingType;	/**< X_BROADCOM_COM_IPv6AddressingType */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_ExternalIPv6Address;	/**< X_BROADCOM_COM_ExternalIPv6Address */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_ExternalIPv6AddressPrefixLength;	/**< X_BROADCOM_COM_ExternalIPv6AddressPrefixLength */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_DefaultIPv6Gateway;	/**< X_BROADCOM_COM_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6DefaultConnectionService;	/**< X_BROADCOM_COM_IPv6DefaultConnectionService */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6DNSEnabled;	/**< X_BROADCOM_COM_IPv6DNSEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DNSServers;	/**< X_BROADCOM_COM_IPv6DNSServers */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6PrefixDelegationEnabled;	/**< X_BROADCOM_COM_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6SitePrefix;	/**< X_BROADCOM_COM_IPv6SitePrefix */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixPltime;	/**< X_BROADCOM_COM_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixVltime;	/**< X_BROADCOM_COM_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_Dhcp6cPid;	/**< X_BROADCOM_COM_Dhcp6cPid */
#endif
} WanPppConnObject;

/*! \brief _WanPppConnObject is used internally to represent WanPppConnObject */
typedef WanPppConnObject _WanPppConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORTMAPPING 94
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_BROADCOM_COM_ExternalPortEnd;	/**< X_BROADCOM_COM_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_BROADCOM_COM_InternalPortEnd;	/**< X_BROADCOM_COM_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
} WanPppConnPortmappingObject;

/*! \brief _WanPppConnPortmappingObject is used internally to represent WanPppConnPortmappingObject */
typedef WanPppConnPortmappingObject _WanPppConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_BROADCOM_COM_PortTriggering.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORT_TRIGGERING 95
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanPppConnPortTriggeringObject;

/*! \brief _WanPppConnPortTriggeringObject is used internally to represent WanPppConnPortTriggeringObject */
typedef WanPppConnPortTriggeringObject _WanPppConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_WAN_PPP_CONN_FIREWALL_EXCEPTION 96
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanPppConnFirewallExceptionObject;

/*! \brief _WanPppConnFirewallExceptionObject is used internally to represent WanPppConnFirewallExceptionObject */
typedef WanPppConnFirewallExceptionObject _WanPppConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats.
 *
 * MDMOID_WAN_PPP_CONN_STATS 97
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
} WanPppConnStatsObject;

/*! \brief _WanPppConnStatsObject is used internally to represent WanPppConnStatsObject */
typedef WanPppConnStatsObject _WanPppConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.
 *
 * MDMOID_L3_FORWARDING 98
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
} L3ForwardingObject;

/*! \brief _L3ForwardingObject is used internally to represent L3ForwardingObject */
typedef L3ForwardingObject _L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}.
 *
 * MDMOID_L3_FORWARDING_ENTRY 99
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    X_BROADCOM_COM_PolicyRoutingName;	/**< X_BROADCOM_COM_PolicyRoutingName */
    char *    destIPAddress;	/**< DestIPAddress */
    char *    destSubnetMask;	/**< DestSubnetMask */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceSubnetMask;	/**< SourceSubnetMask */
    char *    X_BROADCOM_COM_SourceIfName;	/**< X_BROADCOM_COM_SourceIfName */
#ifdef DMP_QOS_1
    SINT32    forwardingPolicy;	/**< ForwardingPolicy */
#endif
    char *    gatewayIPAddress;	/**< GatewayIPAddress */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} L3ForwardingEntryObject;

/*! \brief _L3ForwardingEntryObject is used internally to represent L3ForwardingEntryObject */
typedef L3ForwardingEntryObject _L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPv6Layer3Forwarding.
 *
 * MDMOID_I_PV6_L3_FORWARDING 100
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
} IPv6L3ForwardingObject;

/*! \brief _IPv6L3ForwardingObject is used internally to represent IPv6L3ForwardingObject */
typedef IPv6L3ForwardingObject _IPv6L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPv6Layer3Forwarding.IPv6Forwarding.{i}.
 *
 * MDMOID_I_PV6_L3_FORWARDING_ENTRY 101
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    destIPv6Address;	/**< DestIPv6Address */
    UINT32    destIPv6AddressPrefixLength;	/**< DestIPv6AddressPrefixLength */
    char *    sourceIPv6Address;	/**< SourceIPv6Address */
    char *    sourceIPv6AddressPrefixLength;	/**< SourceIPv6AddressPrefixLength */
    char *    gatewayIPv6Address;	/**< GatewayIPv6Address */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} IPv6L3ForwardingEntryObject;

/*! \brief _IPv6L3ForwardingEntryObject is used internally to represent IPv6L3ForwardingEntryObject */
typedef IPv6L3ForwardingEntryObject _IPv6L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.
 *
 * MDMOID_SERVICES 102
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ServicesObject;

/*! \brief _ServicesObject is used internally to represent ServicesObject */
typedef ServicesObject _ServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.
 *
 * MDMOID_VOICE 103
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    voiceProfileNumberOfEntries;	/**< VoiceProfileNumberOfEntries */
    char *    X_BROADCOM_COM_BoundIfName;	/**< X_BROADCOM_COM_BoundIfName */
    char *    X_BROADCOM_COM_BoundIpAddr;	/**< X_BROADCOM_COM_BoundIpAddr */
    char *    X_BROADCOM_COM_LoggingLevel;	/**< X_BROADCOM_COM_LoggingLevel */
    char *    X_BROADCOM_COM_LoggingDestination;	/**< X_BROADCOM_COM_LoggingDestination */
} VoiceObject;

/*! \brief _VoiceObject is used internally to represent VoiceObject */
typedef VoiceObject _VoiceObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.
 *
 * MDMOID_VOICE_CAP 104
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxProfileCount;	/**< MaxProfileCount */
    UINT32    maxLineCount;	/**< MaxLineCount */
    UINT32    maxSessionsPerLine;	/**< MaxSessionsPerLine */
    UINT32    maxSessionCount;	/**< MaxSessionCount */
    char *    signalingProtocols;	/**< SignalingProtocols */
    char *    regions;	/**< Regions */
    UBOOL8    RTCP;	/**< RTCP */
    UBOOL8    SRTP;	/**< SRTP */
    UBOOL8    RTPRedundancy;	/**< RTPRedundancy */
    UBOOL8    DSCPCoupled;	/**< DSCPCoupled */
    UBOOL8    ethernetTaggingCoupled;	/**< EthernetTaggingCoupled */
    UBOOL8    PSTNSoftSwitchOver;	/**< PSTNSoftSwitchOver */
    UBOOL8    faxT38;	/**< FaxT38 */
    UBOOL8    faxPassThrough;	/**< FaxPassThrough */
    UBOOL8    modemPassThrough;	/**< ModemPassThrough */
    UBOOL8    toneGeneration;	/**< ToneGeneration */
    UBOOL8    ringGeneration;	/**< RingGeneration */
    UBOOL8    digitMap;	/**< DigitMap */
    UBOOL8    numberingPlan;	/**< NumberingPlan */
    UBOOL8    buttonMap;	/**< ButtonMap */
    UBOOL8    voicePortTests;	/**< VoicePortTests */
} VoiceCapObject;

/*! \brief _VoiceCapObject is used internally to represent VoiceCapObject */
typedef VoiceCapObject _VoiceCapObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.SIP.
 *
 * MDMOID_VOICE_CAP_SIP 105
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    role;	/**< Role */
    char *    extensions;	/**< Extensions */
    char *    transports;	/**< Transports */
    char *    URISchemes;	/**< URISchemes */
    UBOOL8    eventSubscription;	/**< EventSubscription */
    UBOOL8    responseMap;	/**< ResponseMap */
    char *    TLSKeyExchangeProtocols;	/**< TLSKeyExchangeProtocols */
} VoiceCapSipObject;

/*! \brief _VoiceCapSipObject is used internally to represent VoiceCapSipObject */
typedef VoiceCapSipObject _VoiceCapSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.MGCP.
 *
 * MDMOID_VOICE_CAP_MGCP 106
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    extensions;	/**< Extensions */
} VoiceCapMgcpObject;

/*! \brief _VoiceCapMgcpObject is used internally to represent VoiceCapMgcpObject */
typedef VoiceCapMgcpObject _VoiceCapMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.Codecs.{i}.
 *
 * MDMOID_VOICE_CAP_CODECS 107
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
} VoiceCapCodecsObject;

/*! \brief _VoiceCapCodecsObject is used internally to represent VoiceCapCodecsObject */
typedef VoiceCapCodecsObject _VoiceCapCodecsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.
 *
 * MDMOID_VOICE_PROF 108
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    UBOOL8    reset;	/**< Reset */
    UINT32    numberOfLines;	/**< NumberOfLines */
    char *    name;	/**< Name */
    char *    signalingProtocol;	/**< SignalingProtocol */
    UINT32    maxSessions;	/**< MaxSessions */
    char *    DTMFMethod;	/**< DTMFMethod */
    char *    DTMFMethodG711;	/**< DTMFMethodG711 */
    char *    X_BROADCOM_COM_HookFlashMethod;	/**< X_BROADCOM_COM_HookFlashMethod */
    char *    region;	/**< Region */
    char *    digitMap;	/**< DigitMap */
    UBOOL8    digitMapEnable;	/**< DigitMapEnable */
    UBOOL8    STUNEnable;	/**< STUNEnable */
    char *    STUNServer;	/**< STUNServer */
    UINT32    X_BROADCOM_COM_STUNServerPort;	/**< X_BROADCOM_COM_STUNServerPort */
    char *    X_BROADCOM_COM_LogServer;	/**< X_BROADCOM_COM_LogServer */
    UINT32    X_BROADCOM_COM_LogServerPort;	/**< X_BROADCOM_COM_LogServerPort */
} VoiceProfObject;

/*! \brief _VoiceProfObject is used internally to represent VoiceProfObject */
typedef VoiceProfObject _VoiceProfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.ServiceProviderInfo.
 *
 * MDMOID_VOICE_PROF_PROVIDER 109
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
} VoiceProfProviderObject;

/*! \brief _VoiceProfProviderObject is used internally to represent VoiceProfProviderObject */
typedef VoiceProfProviderObject _VoiceProfProviderObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.
 *
 * MDMOID_VOICE_PROF_SIP 110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    proxyServer;	/**< ProxyServer */
    UINT32    proxyServerPort;	/**< ProxyServerPort */
    char *    proxyServerTransport;	/**< ProxyServerTransport */
    char *    registrarServer;	/**< RegistrarServer */
    UINT32    registrarServerPort;	/**< RegistrarServerPort */
    char *    registrarServerTransport;	/**< RegistrarServerTransport */
    UBOOL8    X_BROADCOM_COM_ToTagMatching;	/**< X_BROADCOM_COM_ToTagMatching */
    char *    X_BROADCOM_COM_MusicServer;	/**< X_BROADCOM_COM_MusicServer */
    UINT32    X_BROADCOM_COM_MusicServerPort;	/**< X_BROADCOM_COM_MusicServerPort */
    char *    userAgentDomain;	/**< UserAgentDomain */
    UINT32    userAgentPort;	/**< UserAgentPort */
    char *    userAgentTransport;	/**< UserAgentTransport */
    char *    outboundProxy;	/**< OutboundProxy */
    UINT32    outboundProxyPort;	/**< OutboundProxyPort */
    char *    organization;	/**< Organization */
    UINT32    registrationPeriod;	/**< RegistrationPeriod */
    UINT32    registerExpires;	/**< RegisterExpires */
    UINT32    registerRetryInterval;	/**< RegisterRetryInterval */
    UINT32    DSCPMark;	/**< DSCPMark */
    SINT32    VLANIDMark;	/**< VLANIDMark */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
} VoiceProfSipObject;

/*! \brief _VoiceProfSipObject is used internally to represent VoiceProfSipObject */
typedef VoiceProfSipObject _VoiceProfSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.EventSubscribe.{i}.
 *
 * MDMOID_VOICE_PROF_SIP_SUBSCRIBE 111
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    event;	/**< Event */
    char *    notifier;	/**< Notifier */
    UINT32    notifierPort;	/**< NotifierPort */
    char *    notifierTransport;	/**< NotifierTransport */
} VoiceProfSipSubscribeObject;

/*! \brief _VoiceProfSipSubscribeObject is used internally to represent VoiceProfSipSubscribeObject */
typedef VoiceProfSipSubscribeObject _VoiceProfSipSubscribeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.MGCP.
 *
 * MDMOID_VOICE_PROF_MGCP 112
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    callAgent1;	/**< CallAgent1 */
    char *    user;	/**< User */
} VoiceProfMgcpObject;

/*! \brief _VoiceProfMgcpObject is used internally to represent VoiceProfMgcpObject */
typedef VoiceProfMgcpObject _VoiceProfMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.
 *
 * MDMOID_VOICE_PROF_RTP 113
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    localPortMin;	/**< LocalPortMin */
    UINT32    localPortMax;	/**< LocalPortMax */
    UINT32    DSCPMark;	/**< DSCPMark */
    UINT32    telephoneEventPayloadType;	/**< TelephoneEventPayloadType */
} VoiceProfRtpObject;

/*! \brief _VoiceProfRtpObject is used internally to represent VoiceProfRtpObject */
typedef VoiceProfRtpObject _VoiceProfRtpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.FaxT38.
 *
 * MDMOID_VOICE_PROF_FAX_T38 114
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    bitRate;	/**< BitRate */
    UINT32    highSpeedPacketRate;	/**< HighSpeedPacketRate */
} VoiceProfFaxT38Object;

/*! \brief _VoiceProfFaxT38Object is used internally to represent VoiceProfFaxT38Object */
typedef VoiceProfFaxT38Object _VoiceProfFaxT38Object;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.
 *
 * MDMOID_VOICE_LINE 115
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    char *    directoryNumber;	/**< DirectoryNumber */
    char *    status;	/**< Status */
    char *    callState;	/**< CallState */
#ifdef DMP_TAENDPOINT_1
    char *    phyReferenceList;	/**< PhyReferenceList */
#endif
} VoiceLineObject;

/*! \brief _VoiceLineObject is used internally to represent VoiceLineObject */
typedef VoiceLineObject _VoiceLineObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.SIP.
 *
 * MDMOID_VOICE_LINE_SIP 116
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    authUserName;	/**< AuthUserName */
    char *    authPassword;	/**< AuthPassword */
    char *    URI;	/**< URI */
} VoiceLineSipObject;

/*! \brief _VoiceLineSipObject is used internally to represent VoiceLineSipObject */
typedef VoiceLineSipObject _VoiceLineSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.CallingFeatures.
 *
 * MDMOID_VOICE_LINE_CALLING_FEATURES 117
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    callerIDEnable;	/**< CallerIDEnable */
    char *    callerIDName;	/**< CallerIDName */
    UBOOL8    callWaitingEnable;	/**< CallWaitingEnable */
    UBOOL8    X_BROADCOM_COM_CallWaitingStart;	/**< X_BROADCOM_COM_CallWaitingStart */
    char *    callWaitingStatus;	/**< CallWaitingStatus */
    UINT32    maxSessions;	/**< MaxSessions */
    UBOOL8    callForwardUnconditionalEnable;	/**< CallForwardUnconditionalEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardUnconditionalStart;	/**< X_BROADCOM_COM_CallForwardUnconditionalStart */
    char *    callForwardUnconditionalNumber;	/**< CallForwardUnconditionalNumber */
    UBOOL8    callForwardOnBusyEnable;	/**< CallForwardOnBusyEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardOnBusyStart;	/**< X_BROADCOM_COM_CallForwardOnBusyStart */
    char *    callForwardOnBusyNumber;	/**< CallForwardOnBusyNumber */
    UBOOL8    callForwardOnNoAnswerEnable;	/**< CallForwardOnNoAnswerEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardOnNoAnswerStart;	/**< X_BROADCOM_COM_CallForwardOnNoAnswerStart */
    char *    callForwardOnNoAnswerNumber;	/**< CallForwardOnNoAnswerNumber */
    UBOOL8    callTransferEnable;	/**< CallTransferEnable */
    UBOOL8    MWIEnable;	/**< MWIEnable */
    UBOOL8    anonymousCallBlockEnable;	/**< AnonymousCallBlockEnable */
    UBOOL8    X_BROADCOM_COM_AnonymousCallBlockStart;	/**< X_BROADCOM_COM_AnonymousCallBlockStart */
    UBOOL8    anonymousCallEnable;	/**< AnonymousCallEnable */
    UBOOL8    X_BROADCOM_COM_AnonymousCallStart;	/**< X_BROADCOM_COM_AnonymousCallStart */
    UBOOL8    doNotDisturbEnable;	/**< DoNotDisturbEnable */
    UBOOL8    X_BROADCOM_COM_DoNotDisturbStart;	/**< X_BROADCOM_COM_DoNotDisturbStart */
    UBOOL8    callReturnEnable;	/**< CallReturnEnable */
    UBOOL8    repeatDialEnable;	/**< RepeatDialEnable */
    UBOOL8    X_BROADCOM_COM_CAllCompletionOnBusyEnable;	/**< X_BROADCOM_COM_CAllCompletionOnBusyEnable */
    UBOOL8    X_BROADCOM_COM_SpeedDialEnable;	/**< X_BROADCOM_COM_SpeedDialEnable */
    UBOOL8    X_BROADCOM_COM_WarmLineEnable;	/**< X_BROADCOM_COM_WarmLineEnable */
    UBOOL8    X_BROADCOM_COM_WarmLineStart;	/**< X_BROADCOM_COM_WarmLineStart */
    char *    X_BROADCOM_COM_WarmLineNumber;	/**< X_BROADCOM_COM_WarmLineNumber */
    UBOOL8    X_BROADCOM_COM_CallBarringEnable;	/**< X_BROADCOM_COM_CallBarringEnable */
    char *    X_BROADCOM_COM_CallBarringMode;	/**< X_BROADCOM_COM_CallBarringMode */
    char *    X_BROADCOM_COM_CallBarringUserPin;	/**< X_BROADCOM_COM_CallBarringUserPin */
    char *    X_BROADCOM_COM_CallBarringDigitMap;	/**< X_BROADCOM_COM_CallBarringDigitMap */
    UBOOL8    X_BROADCOM_COM_NetworkPrivacyEnable;	/**< X_BROADCOM_COM_NetworkPrivacyEnable */
    UBOOL8    X_BROADCOM_COM_NetworkPrivacyStart;	/**< X_BROADCOM_COM_NetworkPrivacyStart */
    UBOOL8    X_BROADCOM_COM_VMWIEnable;	/**< X_BROADCOM_COM_VMWIEnable */
} VoiceLineCallingFeaturesObject;

/*! \brief _VoiceLineCallingFeaturesObject is used internally to represent VoiceLineCallingFeaturesObject */
typedef VoiceLineCallingFeaturesObject _VoiceLineCallingFeaturesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.VoiceProcessing.
 *
 * MDMOID_VOICE_LINE_PROCESSING 118
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    transmitGain;	/**< TransmitGain */
    SINT32    receiveGain;	/**< ReceiveGain */
} VoiceLineProcessingObject;

/*! \brief _VoiceLineProcessingObject is used internally to represent VoiceLineProcessingObject */
typedef VoiceLineProcessingObject _VoiceLineProcessingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.
 *
 * MDMOID_VOICE_LINE_CODEC 119
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceLineCodecObject;

/*! \brief _VoiceLineCodecObject is used internally to represent VoiceLineCodecObject */
typedef VoiceLineCodecObject _VoiceLineCodecObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.List.{i}.
 *
 * MDMOID_VOICE_LINE_CODEC_LIST 120
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
    UBOOL8    enable;	/**< Enable */
    UINT32    priority;	/**< Priority */
} VoiceLineCodecListObject;

/*! \brief _VoiceLineCodecListObject is used internally to represent VoiceLineCodecListObject */
typedef VoiceLineCodecListObject _VoiceLineCodecListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Stats.
 *
 * MDMOID_VOICE_LINE_STATS 121
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    resetStatistics;	/**< ResetStatistics */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsLost;	/**< PacketsLost */
    UINT32    incomingCallsReceived;	/**< IncomingCallsReceived */
    UINT32    incomingCallsAnswered;	/**< IncomingCallsAnswered */
    UINT32    incomingCallsConnected;	/**< IncomingCallsConnected */
    UINT32    incomingCallsFailed;	/**< IncomingCallsFailed */
    UINT32    outgoingCallsAttempted;	/**< OutgoingCallsAttempted */
    UINT32    outgoingCallsAnswered;	/**< OutgoingCallsAnswered */
    UINT32    outgoingCallsConnected;	/**< OutgoingCallsConnected */
    UINT32    outgoingCallsFailed;	/**< OutgoingCallsFailed */
} VoiceLineStatsObject;

/*! \brief _VoiceLineStatsObject is used internally to represent VoiceLineStatsObject */
typedef VoiceLineStatsObject _VoiceLineStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.
 *
 * MDMOID_VOICE_PHY_INTF 122
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    phyPort;	/**< PhyPort */
    UINT32    interfaceID;	/**< InterfaceID */
    char *    description;	/**< Description */
} VoicePhyIntfObject;

/*! \brief _VoicePhyIntfObject is used internally to represent VoicePhyIntfObject */
typedef VoicePhyIntfObject _VoicePhyIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.Tests.
 *
 * MDMOID_VOICE_PHY_INTF_TESTS 123
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    testState;	/**< TestState */
    char *    testSelector;	/**< TestSelector */
    UBOOL8    phoneConnectivity;	/**< PhoneConnectivity */
} VoicePhyIntfTestsObject;

/*! \brief _VoicePhyIntfTestsObject is used internally to represent VoicePhyIntfTestsObject */
typedef VoicePhyIntfTestsObject _VoicePhyIntfTestsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_PSTN.{i}.
 *
 * MDMOID_VOICE_PSTN 124
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    outgoingCallDialPlan;	/**< OutgoingCallDialPlan */
    char *    incomingCallRoutingMode;	/**< IncomingCallRoutingMode */
    char *    incomingCallRoutingDest;	/**< IncomingCallRoutingDest */
} VoicePstnObject;

/*! \brief _VoicePstnObject is used internally to represent VoicePstnObject */
typedef VoicePstnObject _VoicePstnObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SnmpCfg.
 *
 * MDMOID_SNMP_CFG 125
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    ROCommunity;	/**< ROCommunity */
    char *    RWCommunity;	/**< RWCommunity */
    char *    sysName;	/**< SysName */
    char *    sysLocation;	/**< SysLocation */
    char *    sysContact;	/**< SysContact */
    char *    trapIPAddress;	/**< TrapIPAddress */
} SnmpCfgObject;

/*! \brief _SnmpCfgObject is used internally to represent SnmpCfgObject */
typedef SnmpCfgObject _SnmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SecDmzHostCfg.
 *
 * MDMOID_SEC_DMZ_HOST_CFG 126
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
} SecDmzHostCfgObject;

/*! \brief _SecDmzHostCfgObject is used internally to represent SecDmzHostCfgObject */
typedef SecDmzHostCfgObject _SecDmzHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AccessTimeRestriction.{i}.
 *
 * MDMOID_ACCESS_TIME_RESTRICTION 127
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    startTime;	/**< StartTime */
    char *    endTime;	/**< EndTime */
    char *    days;	/**< Days */
    char *    MACAddress;	/**< MACAddress */
} AccessTimeRestrictionObject;

/*! \brief _AccessTimeRestrictionObject is used internally to represent AccessTimeRestrictionObject */
typedef AccessTimeRestrictionObject _AccessTimeRestrictionObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_UrlFilterCfg.
 *
 * MDMOID_URL_FILTER_CFG 128
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    excludeMode;	/**< ExcludeMode */
} UrlFilterCfgObject;

/*! \brief _UrlFilterCfgObject is used internally to represent UrlFilterCfgObject */
typedef UrlFilterCfgObject _UrlFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_UrlFilterCfg.X_BROADCOM_COM_UrlFilterListCfgObj.{i}.
 *
 * MDMOID_URL_FILTER_LIST 129
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    urlAddress;	/**< UrlAddress */
    UINT32    portNumber;	/**< PortNumber */
} UrlFilterListObject;

/*! \brief _UrlFilterListObject is used internally to represent UrlFilterListObject */
typedef UrlFilterListObject _UrlFilterListObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DDnsCfg.{i}.
 *
 * MDMOID_D_DNS_CFG 130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    fullyQualifiedDomainName;	/**< FullyQualifiedDomainName */
    char *    userName;	/**< UserName */
    char *    password;	/**< Password */
    char *    ifName;	/**< IfName */
    char *    providerName;	/**< ProviderName */
} DDnsCfgObject;

/*! \brief _DDnsCfgObject is used internally to represent DDnsCfgObject */
typedef DDnsCfgObject _DDnsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPPCfg.
 *
 * MDMOID_IPP_CFG 131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    make;	/**< Make */
    char *    device;	/**< Device */
    char *    name;	/**< Name */
} IppCfgObject;

/*! \brief _IppCfgObject is used internally to represent IppCfgObject */
typedef IppCfgObject _IppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DebugPortMirroringCfg.{i}.
 *
 * MDMOID_WAN_DEBUG_PORT_MIRRORING_CFG 132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    monitorInterface;	/**< MonitorInterface */
    char *    mirrorInterface;	/**< MirrorInterface */
    UBOOL8    direction;	/**< Direction */
    UBOOL8    status;	/**< Status */
} WanDebugPortMirroringCfgObject;

/*! \brief _WanDebugPortMirroringCfgObject is used internally to represent WanDebugPortMirroringCfgObject */
typedef WanDebugPortMirroringCfgObject _WanDebugPortMirroringCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPSecCfg.{i}.
 *
 * MDMOID_IP_SEC_CFG 133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    UBOOL8    enable;	/**< Enable */
    char *    connName;	/**< ConnName */
    char *    remoteGWAddress;	/**< RemoteGWAddress */
    char *    localRangeLo;	/**< LocalRangeLo */
    char *    localRangeHi;	/**< LocalRangeHi */
    char *    localIPMode;	/**< LocalIPMode */
    char *    localIPAddress;	/**< LocalIPAddress */
    char *    localMask;	/**< LocalMask */
    char *    remoteRangeLo;	/**< RemoteRangeLo */
    char *    remoteRangeHi;	/**< RemoteRangeHi */
    char *    remoteIPMode;	/**< RemoteIPMode */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    char *    remoteMask;	/**< RemoteMask */
    char *    keyExM;	/**< KeyExM */
    char *    authM;	/**< AuthM */
    char *    PSK;	/**< PSK */
    char *    certificateName;	/**< CertificateName */
    char *    perfectFSEn;	/**< PerfectFSEn */
    char *    manualEncryptionAlgo;	/**< ManualEncryptionAlgo */
    char *    manualEncryptionKey;	/**< ManualEncryptionKey */
    char *    manualAuthAlgo;	/**< ManualAuthAlgo */
    char *    manualAthKey;	/**< ManualAthKey */
    char *    SPI;	/**< SPI */
    char *    ph1Mode;	/**< Ph1Mode */
    char *    ph1EncryptionAlo;	/**< Ph1EncryptionAlo */
    char *    ph1IntegrityAlgo;	/**< Ph1IntegrityAlgo */
    char *    ph1DHGroup;	/**< Ph1DHGroup */
    UINT32    ph1KeyTime;	/**< Ph1KeyTime */
    char *    ph2Mode;	/**< Ph2Mode */
    char *    ph2EncryptionAlo;	/**< Ph2EncryptionAlo */
    char *    ph2IntegrityAlgo;	/**< Ph2IntegrityAlgo */
    char *    ph2DHGroup;	/**< Ph2DHGroup */
    UINT32    ph2KeyTime;	/**< Ph2KeyTime */
} IPSecCfgObject;

/*! \brief _IPSecCfgObject is used internally to represent IPSecCfgObject */
typedef IPSecCfgObject _IPSecCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_CertificateCfg.{i}.
 *
 * MDMOID_CERTIFICATE_CFG 134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    subject;	/**< Subject */
    char *    type;	/**< Type */
    char *    password;	/**< Password */
    char *    content;	/**< Content */
    char *    privKey;	/**< PrivKey */
    char *    reqPub;	/**< ReqPub */
    UINT32    refCount;	/**< RefCount */
} CertificateCfgObject;

/*! \brief _CertificateCfgObject is used internally to represent CertificateCfgObject */
typedef CertificateCfgObject _CertificateCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_NetworkConfig.
 *
 * MDMOID_NETWORK_CONFIG 135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    DNSIfName;	/**< DNSIfName */
    char *    DNSServers;	/**< DNSServers */
    UBOOL8    enableAdvancedDMZ;	/**< EnableAdvancedDMZ */
} NetworkConfigObject;

/*! \brief _NetworkConfigObject is used internally to represent NetworkConfigObject */
typedef NetworkConfigObject _NetworkConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_InterfaceControl.
 *
 * MDMOID_INTERFACE_CONTROL 136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ifName;	/**< IfName */
    UBOOL8    moveToWANSide;	/**< MoveToWANSide */
    UBOOL8    moveToLANSide;	/**< MoveToLANSide */
} InterfaceControlObject;

/*! \brief _InterfaceControlObject is used internally to represent InterfaceControlObject */
typedef InterfaceControlObject _InterfaceControlObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_P8021agCfg.
 *
 * MDMOID_P8021AG_CFG 137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    MDLevel;	/**< MDLevel */
} P8021agCfgObject;

/*! \brief _P8021agCfgObject is used internally to represent P8021agCfgObject */
typedef P8021agCfgObject _P8021agCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.
 *
 * MDMOID_GPON_ONTG 138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    BASE64    vendorId;	/**< VendorId */
    BASE64    version;	/**< Version */
    BASE64    serialNumber;	/**< SerialNumber */
    UINT32    trafficManagementOption;	/**< TrafficManagementOption */
    UINT32    vpVcCrossConnectionOption;	/**< VpVcCrossConnectionOption */
    UBOOL8    batteryBackup;	/**< BatteryBackup */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
} GponOntgObject;

/*! \brief _GponOntgObject is used internally to represent GponOntgObject */
typedef GponOntgObject _GponOntgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_GponOnt2G.
 *
 * MDMOID_GPON_ONT2_G 139
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    BASE64    equipmentId;	/**< EquipmentId */
    UINT32    omccVersion;	/**< OmccVersion */
    UINT32    vendorProductCode;	/**< VendorProductCode */
    UINT32    securityCapability;	/**< SecurityCapability */
    UINT32    securityMode;	/**< SecurityMode */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    mode;	/**< Mode */
    UINT32    totalGemPortIdNumber;	/**< TotalGemPortIdNumber */
} GponOnt2GObject;

/*! \brief _GponOnt2GObject is used internally to represent GponOnt2GObject */
typedef GponOnt2GObject _GponOnt2GObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_GponOntData.
 *
 * MDMOID_GPON_ONT_DATA 140
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    mibDataSync;	/**< MibDataSync */
} GponOntDataObject;

/*! \brief _GponOntDataObject is used internally to represent GponOntDataObject */
typedef GponOntDataObject _GponOntDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_GponSoftwareImage.{i}.
 *
 * MDMOID_GPON_SOFTWARE_IMAGE 141
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    BASE64    version;	/**< Version */
    UBOOL8    isCommitted;	/**< IsCommitted */
    UBOOL8    isActive;	/**< IsActive */
    UBOOL8    isValid;	/**< IsValid */
} GponSoftwareImageObject;

/*! \brief _GponSoftwareImageObject is used internally to represent GponSoftwareImageObject */
typedef GponSoftwareImageObject _GponSoftwareImageObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_OltBpon.
 *
 * MDMOID_OLT_BPON 142
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    BASE64    oltVendorId;	/**< OltVendorId */
    BASE64    equipmentId;	/**< EquipmentId */
    BASE64    version;	/**< Version */
} OltBponObject;

/*! \brief _OltBponObject is used internally to represent OltBponObject */
typedef OltBponObject _OltBponObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_GponCardHolder.{i}.
 *
 * MDMOID_GPON_CARD_HOLDER 143
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    actualPlugInUnitType;	/**< ActualPlugInUnitType */
    UINT32    expectedPlugInUnitType;	/**< ExpectedPlugInUnitType */
    UINT32    expectedPortCount;	/**< ExpectedPortCount */
    BASE64    expectedEquipmentId;	/**< ExpectedEquipmentId */
    BASE64    actualEquipmentId;	/**< ActualEquipmentId */
    UINT32    protectionProfilePointer;	/**< ProtectionProfilePointer */
    UINT32    invokeProtectionSwitch;	/**< InvokeProtectionSwitch */
} GponCardHolderObject;

/*! \brief _GponCardHolderObject is used internally to represent GponCardHolderObject */
typedef GponCardHolderObject _GponCardHolderObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponOntG.X_ITU_ORG_GponCardHolder.{i}.X_ITU_ORG_GponCircuitPack.{i}.
 *
 * MDMOID_GPON_CIRCUIT_PACK 144
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    type;	/**< Type */
    UINT32    numberOfPorts;	/**< NumberOfPorts */
    BASE64    serialNumber;	/**< SerialNumber */
    BASE64    version;	/**< Version */
    BASE64    vendorId;	/**< VendorId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    bridgedOrIpInd;	/**< BridgedOrIpInd */
    BASE64    equipmentId;	/**< EquipmentId */
    UINT32    cardConfiguration;	/**< CardConfiguration */
    UINT32    totalTcontBufferNumber;	/**< TotalTcontBufferNumber */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    powerShedOverride;	/**< PowerShedOverride */
} GponCircuitPackObject;

/*! \brief _GponCircuitPackObject is used internally to represent GponCircuitPackObject */
typedef GponCircuitPackObject _GponCircuitPackObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponAniG.
 *
 * MDMOID_GPON_ANI_G 145
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    srIndication;	/**< SrIndication */
    UINT32    totalTcontNumber;	/**< TotalTcontNumber */
    UINT32    gemBlockLength;	/**< GemBlockLength */
    UINT32    piggybackDbaReporting;	/**< PiggybackDbaReporting */
    UINT32    wholeONUDbaReporting;	/**< WholeONUDbaReporting */
    UINT32    sfThreshold;	/**< SfThreshold */
    UINT32    sdThreshold;	/**< SdThreshold */
} GponAniGObject;

/*! \brief _GponAniGObject is used internally to represent GponAniGObject */
typedef GponAniGObject _GponAniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponUniG.{i}.
 *
 * MDMOID_GPON_UNI_G 146
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    configurationOptionStatus;	/**< ConfigurationOptionStatus */
    UINT32    administrativeState;	/**< AdministrativeState */
} GponUniGObject;

/*! \brief _GponUniGObject is used internally to represent GponUniGObject */
typedef GponUniGObject _GponUniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponTCont.{i}.
 *
 * MDMOID_GPON_T_CONT 147
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    allocId;	/**< AllocId */
    UINT32    modeIndicator;	/**< ModeIndicator */
    UINT32    policy;	/**< Policy */
} GponTContObject;

/*! \brief _GponTContObject is used internally to represent GponTContObject */
typedef GponTContObject _GponTContObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpVideoAni.
 *
 * MDMOID_GPON_PPTP_VIDEO_ANI 148
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    arc;	/**< Arc */
    UINT32    arcInterval;	/**< ArcInterval */
    UINT32    frequencyRangeLow;	/**< FrequencyRangeLow */
    UINT32    frequencyRangeHigh;	/**< FrequencyRangeHigh */
    UINT32    signalCapability;	/**< SignalCapability */
    UINT32    opticalSignalLevel;	/**< OpticalSignalLevel */
    UINT32    pilotSignalLevel;	/**< PilotSignalLevel */
    UINT32    signalLevelMin;	/**< SignalLevelMin */
    UINT32    signalLevelMax;	/**< SignalLevelMax */
    UINT32    pilotFrequency;	/**< PilotFrequency */
    UINT32    agcMode;	/**< AgcMode */
    UINT32    agcSetting;	/**< AgcSetting */
    UINT32    videoLowerOpticalThreshold;	/**< VideoLowerOpticalThreshold */
    UINT32    videoUpperOpticalThreshold;	/**< VideoUpperOpticalThreshold */
} GponPptpVideoAniObject;

/*! \brief _GponPptpVideoAniObject is used internally to represent GponPptpVideoAniObject */
typedef GponPptpVideoAniObject _GponPptpVideoAniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpVideoUni.
 *
 * MDMOID_GPON_PPTP_VIDEO_UNI 149
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    arc;	/**< Arc */
    UINT32    arcInterval;	/**< ArcInterval */
    UINT32    powerControl;	/**< PowerControl */
} GponPptpVideoUniObject;

/*! \brief _GponPptpVideoUniObject is used internally to represent GponPptpVideoUniObject */
typedef GponPptpVideoUniObject _GponPptpVideoUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpEthernetUni.
 *
 * MDMOID_GPON_PPTP_ETHERNET_UNI 150
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    expectedType;	/**< ExpectedType */
    UINT32    sensedType;	/**< SensedType */
    UINT32    autoDetectionConfiguration;	/**< AutoDetectionConfiguration */
    UINT32    ethernetLoopbackCfg;	/**< EthernetLoopbackCfg */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    configurationInd;	/**< ConfigurationInd */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UINT32    dteOrDceInd;	/**< DteOrDceInd */
    UINT32    pauseTime;	/**< PauseTime */
    UINT32    bridgedOrIPInd;	/**< BridgedOrIPInd */
    UINT32    arc;	/**< Arc */
    UINT32    arcInterval;	/**< ArcInterval */
    UINT32    pppoeFilter;	/**< PppoeFilter */
    UINT32    powerControl;	/**< PowerControl */
} GponPptpEthernetUniObject;

/*! \brief _GponPptpEthernetUniObject is used internally to represent GponPptpEthernetUniObject */
typedef GponPptpEthernetUniObject _GponPptpEthernetUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpEthernetUni.X_ITU_ORG_GponEthernetPmHistoryData.
 *
 * MDMOID_GPON_ETHERNET_PM_HISTORY_DATA 151
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataBponId;	/**< ThresholdDataBponId */
    UINT32    fcsErrors;	/**< FcsErrors */
    UINT32    excessiveCollisionCounter;	/**< ExcessiveCollisionCounter */
    UINT32    lateCollisionCounter;	/**< LateCollisionCounter */
    UINT32    frameTooLongs;	/**< FrameTooLongs */
    UINT32    bufferOverflowsOnReceive;	/**< BufferOverflowsOnReceive */
    UINT32    bufferOverflowsOnTransmit;	/**< BufferOverflowsOnTransmit */
    UINT32    singleCollisionFrameCounter;	/**< SingleCollisionFrameCounter */
    UINT32    multipleCollisionsFrameCounter;	/**< MultipleCollisionsFrameCounter */
    UINT32    sqeCounter;	/**< SqeCounter */
    UINT32    deferredTransmissionCounter;	/**< DeferredTransmissionCounter */
    UINT32    internalMacTransmitErrorCounter;	/**< InternalMacTransmitErrorCounter */
    UINT32    carrierSenseErrorCounter;	/**< CarrierSenseErrorCounter */
    UINT32    alignmentErrorCounter;	/**< AlignmentErrorCounter */
    UINT32    internalMacReceiveErrorCounter;	/**< InternalMacReceiveErrorCounter */
} GponEthernetPmHistoryDataObject;

/*! \brief _GponEthernetPmHistoryDataObject is used internally to represent GponEthernetPmHistoryDataObject */
typedef GponEthernetPmHistoryDataObject _GponEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpEthernetUni.X_ITU_ORG_GponVlanTaggingOperationCfgData.{i}.
 *
 * MDMOID_GPON_VLAN_TAGGING_OPERATION_CFG_DATA 152
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    usVlanTaggingOperationMode;	/**< UsVlanTaggingOperationMode */
    UINT32    usVlanTagTciValue;	/**< UsVlanTagTciValue */
    UINT32    dsVlanTaggingOperationMode;	/**< DsVlanTaggingOperationMode */
} GponVlanTaggingOperationCfgDataObject;

/*! \brief _GponVlanTaggingOperationCfgDataObject is used internally to represent GponVlanTaggingOperationCfgDataObject */
typedef GponVlanTaggingOperationCfgDataObject _GponVlanTaggingOperationCfgDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPptpPotsUni.{i}.
 *
 * MDMOID_GPON_PPTP_POTS_UNI 153
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    interworkingVccPointer;	/**< InterworkingVccPointer */
    UINT32    arc;	/**< Arc */
    UINT32    arcInterval;	/**< ArcInterval */
    UINT32    impedance;	/**< Impedance */
    UINT32    transmissionPath;	/**< TransmissionPath */
    UINT32    rxGain;	/**< RxGain */
    UINT32    txGain;	/**< TxGain */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    hookState;	/**< HookState */
} GponPptpPotsUniObject;

/*! \brief _GponPptpPotsUniObject is used internally to represent GponPptpPotsUniObject */
typedef GponPptpPotsUniObject _GponPptpPotsUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponMacBridgeServiceProfile.{i}.
 *
 * MDMOID_GPON_MAC_BRIDGE_SERVICE_PROFILE 154
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    spanningTreeInd;	/**< SpanningTreeInd */
    UBOOL8    learningInd;	/**< LearningInd */
    UBOOL8    ATMPortBridgingInd;	/**< ATMPortBridgingInd */
    UINT32    priority;	/**< Priority */
    UINT32    maxAge;	/**< MaxAge */
    UINT32    helloTime;	/**< HelloTime */
    UINT32    forwardDelay;	/**< ForwardDelay */
    UBOOL8    unknownMacAddressDiscard;	/**< UnknownMacAddressDiscard */
} GponMacBridgeServiceProfileObject;

/*! \brief _GponMacBridgeServiceProfileObject is used internally to represent GponMacBridgeServiceProfileObject */
typedef GponMacBridgeServiceProfileObject _GponMacBridgeServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponGalEthernetProfile.{i}.
 *
 * MDMOID_GPON_GAL_ETHERNET_PROFILE 155
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    maximumGemPayloadSize;	/**< MaximumGemPayloadSize */
} GponGalEthernetProfileObject;

/*! \brief _GponGalEthernetProfileObject is used internally to represent GponGalEthernetProfileObject */
typedef GponGalEthernetProfileObject _GponGalEthernetProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponGemPortNetworkCtp.{i}.
 *
 * MDMOID_GPON_GEM_PORT_NETWORK_CTP 156
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    portIDValue;	/**< PortIDValue */
    UINT32    ponTcAdaptergPointer;	/**< PonTcAdaptergPointer */
    UINT32    direction;	/**< Direction */
    UINT32    priorityQueuePointerForUpstream;	/**< PriorityQueuePointerForUpstream */
    UINT32    trafficDescriptorProfilePointer;	/**< TrafficDescriptorProfilePointer */
    UINT32    uniCounter;	/**< UniCounter */
} GponGemPortNetworkCtpObject;

/*! \brief _GponGemPortNetworkCtpObject is used internally to represent GponGemPortNetworkCtpObject */
typedef GponGemPortNetworkCtpObject _GponGemPortNetworkCtpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponGemPortNetworkCtp.{i}.X_ITU_ORG_GponGemPortPmHistoryData.{i}.
 *
 * MDMOID_GPON_GEM_PORT_PM_HISTORY_DATA 157
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataHalfId;	/**< ThresholdDataHalfId */
    UINT32    lostPackets;	/**< LostPackets */
    UINT32    misinsertedPackets;	/**< MisinsertedPackets */
    BASE64    receivedPackets;	/**< ReceivedPackets */
    BASE64    receivedBlocks;	/**< ReceivedBlocks */
    BASE64    transmittedBlocks;	/**< TransmittedBlocks */
    UINT32    impairedBlock;	/**< ImpairedBlock */
} GponGemPortPmHistoryDataObject;

/*! \brief _GponGemPortPmHistoryDataObject is used internally to represent GponGemPortPmHistoryDataObject */
typedef GponGemPortPmHistoryDataObject _GponGemPortPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponPseudowireTp.{i}.
 *
 * MDMOID_GPON_PSEUDOWIRE_TP 158
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    underlyingTransport;	/**< UnderlyingTransport */
    UINT32    serviceType;	/**< ServiceType */
    UINT32    signalling;	/**< Signalling */
    UINT32    tdmUniPointer;	/**< TdmUniPointer */
    UINT32    nearEndIpInfo;	/**< NearEndIpInfo */
    UINT32    farEndIpInfo;	/**< FarEndIpInfo */
    UINT32    payloadSize;	/**< PayloadSize */
    UINT32    payloadEncapsulationDelay;	/**< PayloadEncapsulationDelay */
    UINT32    timingMode;	/**< TimingMode */
    BASE64    transmitCircuitID;	/**< TransmitCircuitID */
    BASE64    expectedCircuitID;	/**< ExpectedCircuitID */
    BASE64    receivedCircuitId;	/**< ReceivedCircuitId */
    UINT32    exceptionPolicy;	/**< ExceptionPolicy */
    UINT32    arc;	/**< Arc */
    UINT32    arcInterval;	/**< ArcInterval */
} GponPseudowireTpObject;

/*! \brief _GponPseudowireTpObject is used internally to represent GponPseudowireTpObject */
typedef GponPseudowireTpObject _GponPseudowireTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponGemInterworkingTp.{i}.
 *
 * MDMOID_GPON_GEM_INTERWORKING_TP 159
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    gemPortNetworkCtpConnPointer;	/**< GemPortNetworkCtpConnPointer */
    UINT32    interworkingOption;	/**< InterworkingOption */
    UINT32    serviceProfilePointer;	/**< ServiceProfilePointer */
    UINT32    interworkingTermPointPointer;	/**< InterworkingTermPointPointer */
    UINT32    pptpCounter;	/**< PptpCounter */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    galProfilePointer;	/**< GalProfilePointer */
    UINT32    galLoopbackConfiguration;	/**< GalLoopbackConfiguration */
} GponGemInterworkingTpObject;

/*! \brief _GponGemInterworkingTpObject is used internally to represent GponGemInterworkingTpObject */
typedef GponGemInterworkingTpObject _GponGemInterworkingTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_ORG_GponGemInterworkingTp.{i}.X_ITU_ORG_GponGalEthernetPmHistoryData.{i}.
 *
 * MDMOID_GPON_GAL_ETHERNET_PM_HISTORY_DATA 160
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataHalfid;	/**< ThresholdDataHalfid */
    UINT32    discardedFrames;	/**< DiscardedFrames */
} GponGalEthernetPmHistoryDataObject;

/*! \brief _GponGalEthernetPmHistoryDataObject is used internally to represent GponGalEthernetPmHistoryDataObject */
typedef GponGalEthernetPmHistoryDataObject _GponGalEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_GponOmciStats.
 *
 * MDMOID_GPON_OMCI_STATS 161
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    rxGoodPackets;	/**< RxGoodPackets */
    UINT32    rxLengthErrors;	/**< RxLengthErrors */
    UINT32    rxCrcErrors;	/**< RxCrcErrors */
    UINT32    rxOtherErrors;	/**< RxOtherErrors */
    UINT32    txAvcPackets;	/**< TxAvcPackets */
    UINT32    txResponsePackets;	/**< TxResponsePackets */
    UINT32    txRetransmissions;	/**< TxRetransmissions */
    UINT32    txErrors;	/**< TxErrors */
} GponOmciStatsObject;

/*! \brief _GponOmciStatsObject is used internally to represent GponOmciStatsObject */
typedef GponOmciStatsObject _GponOmciStatsObject;





#endif /* __MDM_OBJECT_H__ */
